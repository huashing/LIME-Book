//******************************************************************************
// 汎用ＢＴＢクラス
// 【Property】
//	path         ... BTBファイルの指定
//	construction ... BTBフォーマットの指定
// 【Method】
//	readBtb   ... BTBファイル読み込み
//	getStr    ... 引数:(row, col, ope)で値の取得
//	getMaxRow ... 行数の取得
//	searchEx  ... 引数：(col, str)でBTBを検索  戻り値：検索結果row
//	search    ... 引数：(col, str, ope)でBTBを検索
//	getStrEx  ... 引数：(col)で検索した結果から値を取得
//******************************************************************************
function clsBtb(path, construction) {
// 【Property】
	this.path         = path;
	this.construction = construction;
	this.btbArray    = new Array();
	this.searchRow   = NaN;
	this.obj;
	this.mode = 0;
// 【Method】
	this.readBtb        = _btbReadBtb;
	this.getStr         = _btbGetStr;
	this.getArray       = _btbGetArray;
	this.getMaxRow      = _btbGetMaxRow;
	this.searchEx       = _btbSearchEx;
	this.searchGetRow   = _btbSearchGetRow;
	this.searchGetArray = _btbSearchGetArray;
	this.openBtb        = _btbOpenBtb;
	this.closeBtb       = _btbCloseBtb;
}
function _btbReadBtb(idx) {
	//バイナリーテーブルの読み込み
	this.mode = (isNaN(idx)) ? 0 : 1;
	this.btbArray = new Array();
	var bt = new BinaryTable(this.path, this.construction);
	if (bt == null || bt.nrow == 0) {
		if (bt != null && bt.nrow == 0) bt.close();
//		go('/40/0000/startup.bml');
		return;
	}

	var nrow = bt.nrow;
	var ncol = this.construction.split(",").length - 1;
	var cnt = 0;
	for (var i = 0; i < nrow; i++) {
		var tmp = new Array();
		for (var j = 0; j < ncol; j++) {
			tmp[j] = bt.toString(i, j);
		}
		if (this.mode == 0) {
			this.btbArray[cnt++] = tmp;
		} else {
			var tmpKey = 'key' + tmp[idx].toString();
			this.btbArray[tmpKey] = tmp;
		}
	}
	bt.close();
}
function _btbGetStr(row, col) { 
	var tmpRow = (this.mode == 0) ? row : 'key' + row.toString();
	return this.btbArray[tmpRow][col].toString();
}
function _btbGetArray(row) {
	var tmpRow = (this.mode == 0) ? row : 'key' + row.toString();
	return this.btbArray[tmpRow];
}
function _btbGetMaxRow()      { return this.btbArray.length; }
function _btbSearchEx(col, str) {
	for (var i = 0; i < this.btbArray.length; i++) {
		if (this.btbArray[i][col] == str) { return i; }
	}
	return -1;
}
function _btbSearchGetRow(col0, str0, ope0, col1, str1, ope1, col2, str2, ope2) {
	var resArray = new Array();
	if (this.obj == null || this.obj.nrow == 0) {
		if (this.obj != null && this.obj.nrow == 0) { this.obj.close(); }
		return -1;
	}
	if (col0 != null && str0 != null && ope0 != null) {
		if (col1 != null && str1 != null && ope1 != null) {
			if (col2 != null && str2 != null && ope2 != null) {
				this.searchRow = this.obj.search(0, col0, str0, ope0, col1, str1, ope1, col2, str2, ope2, false, 1, resArray);
			} else {
				this.searchRow = this.obj.search(0, col0, str0, ope0, col1, str1, ope1, false, 1, resArray);
			}
		} else {
			this.searchRow = this.obj.search(0, col0, str0, ope0, false, 1, resArray);
		}
	} else {
		this.searchRow = -1;
	}
	return this.searchRow;
}
function _btbSearchGetArray(col0, str0, ope0, col1, str1, ope1, col2, str2, ope2) {
	var resArray = new Array();
	if (this.obj == null || this.obj.nrow == 0) {
		if (this.obj != null && this.obj.nrow == 0) { this.obj.close(); }
		return resArray;
	}
	if (col0 != null && str0 != null && ope0 != null) {
		if (col1 != null && str1 != null && ope1 != null) {
			if (col2 != null && str2 != null && ope2 != null) {
				this.searchRow = this.obj.search(0, col0, str0, ope0, col1, str1, ope1, col2, str2, ope2, false, this.obj.nrow, resArray);
			} else {
				this.searchRow = this.obj.search(0, col0, str0, ope0, col1, str1, ope1, false, this.obj.nrow, resArray);
			}
		} else {
			this.searchRow = this.obj.search(0, col0, str0, ope0, false, this.obj.nrow, resArray);
		}
	}
	return resArray;
}
function _btbOpenBtb() { this.obj = new BinaryTable(this.path, this.construction); }
function _btbCloseBtb() { this.obj.close(); }
//******************************************************************************
// マクロ関数一式
//******************************************************************************
function ps(n)		{ browser.playRomSound("romsound://" + n.toString()); }
function go(uri)	{ browser.launchDocument(uri,"cut"); }
function gobj(id)	{ return document.getElementById(id); }
function vis(id)	{ gobj(id).normalStyle.visibility = "visible"; }
function hid(id)	{ gobj(id).normalStyle.visibility = "hidden";  }
function st(id, txt) { gobj(id).firstChild.data = txt; }
function sc(id, ci, gci) {
	gobj(id).normalStyle.colorIndex = ci;
	gobj(id).normalStyle.grayscaleColorIndex = gci;
}
function debug(arg)	{ browser.CONSOLE(arg); }
//******************************************************************************
// イベント処理一覧
//******************************************************************************
function dbp() {
	//■...Dボタン押下時
	ps("11");
	go('/40/0000/startup.bml');
}
