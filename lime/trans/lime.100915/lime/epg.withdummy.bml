<?xml version="1.0" encoding="EUC-JP" ?>
<!DOCTYPE bml PUBLIC "+//ARIB STD-B24:1999//DTD BML Document//JA" "http://www.arib.or.jp/B24/DTD/bml_1_1.dtd">
<?bml bml-version="3.0" ?>
<!--
============================================================
Copyright (C)2009, NTT Plala Inc. All rights reserved.
Copyright(C) Nippon Telegraph and Telephone Corporation 2010
============================================================
-->
<bml>
<head>
<title>IPTV DTV PORTAL IP-VOD Player</title>
<style><![CDATA[
body{resolution:960x540;display-aspect-ratio:16v9;used-key-list:basic data-button;clut:url(images/hikari.clt);}
p.clocktext{font-size:16px;width:16px;height:16px;color-index:7;grayscale-color-index:25 109;}
p.temaIconSub{font-size:16px;color-index:7;grayscale-color-index:178 171;}
.btn{width:156px;height:36px;}
div.cell{width:100px;background-color-index:18;visibility:hidden;}
p.cell{left:2px;top:-9px;width:98px;font-size:16px;text-align:left;color-index:7;grayscale-color-index:25 45;background-color-index:18;padding-top:9px;
}

]]></style>
<script src="../scripts/plalatv.ecm"/>
<script src="../scripts/common.ecm"/>
<script><![CDATA[
var gFcsId="";
var gFcsTbl=new Array();
var gCHList = new CHList();

var gEPGStartTime = null;
var gStartChIdx = NaN;
var gOldFocus;
var gPopupPage=0;
var gVisibleChIdxArr = new Array("","","","","","","");

clockStart();

//キーイベント処理
//Key event handler
function keyDown(){
	var keyCode = document.currentEvent.keyCode;
	//戻るキー
	if(keyCode == 19) {
		playSound(7);
		gState.launchDocument("tv.bml");
	}
}
//番組セルにおいてキーが押下された場合の処理
function EpgKeyDown(){
	var keyCode = document.currentEvent.keyCode;
	var focus;
	var tgtCh,idx,chidx,ret,toploc,date,date2,nowDate,i;
	var flag=false;
	if(document.currentFocus) focus=document.currentFocus.id;
	else return;
	if(focus.substring(0,4) != "cell") return;
	idx = parseInt(focus.substring(4,focus.length),10);

	//決定キー
	if(keyCode == 18) {
		playSound(7);
		lockScreen();
		WriteEventInfoPopup(focus);
		unlockScreen();
	}
	//戻るキー
	else if(keyCode == 19) {
		playSound(7);
		gState.launchDocument("tv.bml");
	}
	//緑キー
	else if(keyCode == 23) {
		chidx = GetChIdxFromId(focus);
		playSound(7);
		date = new Date();
		nowDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(),date.getHours(),0,0,0);

		if((gEPGStartTime.toString()).substring(0,11) == (nowDate.toString()).substring(0,11)) return;
		gEPGStartTime = browser.addDate(gEPGStartTime,-1,4);
		for(i=0;i<7;i++){
			ClearChannelEvent(gVisibleChIdxArr[i]);
			GetChannelEvent(gVisibleChIdxArr[i],gEPGStartTime);
		}
		lockScreen();

		WriteEventList();

		tgtCh = gCHList.getIdxCHInfo(gVisibleChIdxArr[chidx]);
		if(isVis("cell"+tgtCh.objEndIdx)) {
			EpgBlur(focus);
			EpgFocus("cell"+tgtCh.objEndIdx);
		} else {
			ret=SearchEPGCell(chIdx,432,"left");
			if(ret) {
				EpgBlur(focus);
				EpgFocus(ret);
			} else scfocusFromEPG();
		}
		unlockScreen();
	}
	//黄キー
	else if(keyCode == 24) {
		chidx = GetChIdxFromId(focus);
		playSound(7);
		date = new Date();
		nowDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(),date.getHours(),0,0,0);
		gEPGStartTime = browser.addDate(gEPGStartTime,1,4);
		for(i=0;i<7;i++){
			ClearChannelEvent(gVisibleChIdxArr[i]);
			GetChannelEvent(gVisibleChIdxArr[i],gEPGStartTime);
		}
		lockScreen();

		WriteEventList();

		tgtCh = gCHList.getIdxCHInfo(gVisibleChIdxArr[chidx]);
		if(isVis("cell"+tgtCh.objStartIdx)) {
			EpgBlur(focus);
			EpgFocus("cell"+tgtCh.objStartIdx);
		} else {
			ret=SearchEPGCell(chIdx,432,"left");
			if(ret) {
				EpgBlur(focus);
				EpgFocus(ret);
			} else scfocusFromEPG();
		}
		unlockScreen();
	}
	//上キー
	else if(keyCode == 1) {
		chidx = GetChIdxFromId(focus);
		if( isNaN(chidx) ) return;
		tgtCh = gCHList.getIdxCHInfo(gVisibleChIdxArr[chidx]);
		if(!tgtCh) scfocusFromEPG();

		idx--;
		if(isNaN(tgtCh.objStartIdx))	flag=true;
		else if(idx < tgtCh.objStartIdx)flag=true;
		else if(!isVis("cell"+idx))		flag=true;
		if(flag==true){
			date = new Date();
			nowDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(),date.getHours(),0,0,0);

			if(browser.subDate(gEPGStartTime , nowDate,1 ) > 0 && gEPGStartTime.getHours() != 0){
				date = browser.addDate(gEPGStartTime,-3,3);

				if(browser.subDate(nowDate , date,1 ) > 0) date = nowDate;
				else date = browser.addDate(gEPGStartTime,-3,3);

				//日付またいでるかチェック
				date2 = new Date(gEPGStartTime.getFullYear(), gEPGStartTime.getMonth(), gEPGStartTime.getDate(),0,0,0,0);
				//gEPGStartTimeの0時よりも以前であったら日付をまたいでいる

				if(browser.subDate(date , date2,1 ) < 0) date = date2;

				gEPGStartTime = date;

				for(i=0;i<7;i++){
					ClearChannelEvent(gVisibleChIdxArr[i]);
					GetChannelEvent(gVisibleChIdxArr[i],gEPGStartTime);
				}
				lockScreen();

				WriteEventList();

				if(isVis("cell"+tgtCh.objEndIdx)) {
					EpgBlur(focus);
					EpgFocus("cell"+tgtCh.objEndIdx);
				} else {
					ret=SearchEPGCell(chIdx,432,"left");
					if(ret) {
						EpgBlur(focus);
						EpgFocus(ret);
					}
					else scfocusFromEPG();
				}
				unlockScreen();
			} else {
				lockScreen();
				scfocusFromEPG();
				unlockScreen();
			}
		} else {
			lockScreen();
			EpgBlur(focus);
			EpgFocus("cell"+idx);
			unlockScreen();
		}
	}
	//下キー
	else if(keyCode == 2) {
		chidx = GetChIdxFromId(focus);
		if( isNaN(chidx) ) return;
		tgtCh = gCHList.getIdxCHInfo(gVisibleChIdxArr[chidx]);
		if(!tgtCh) scfocusFromEPG();

		idx++;
		if(isNaN(tgtCh.objEndIdx))		flag=true;
		else if(idx > tgtCh.objEndIdx)	flag=true;
		else if(!isVis("cell"+idx))		flag=true;
		if(flag==true){
			if(gEPGStartTime.getHours() != 21) {
				date = browser.addDate(gEPGStartTime,6,3);
				if(gEPGStartTime.getDate() != date.getDate()) gEPGStartTime.setHours(21);
				else gEPGStartTime = browser.addDate(gEPGStartTime,3,3);
				for(i=0;i<7;i++){
					ClearChannelEvent(gVisibleChIdxArr[i]);
					GetChannelEvent(gVisibleChIdxArr[i],gEPGStartTime);
				}
				lockScreen();

				WriteEventList();

				if(isVis("cell"+tgtCh.objStartIdx)) {
					EpgBlur(focus);
					EpgFocus("cell"+tgtCh.objStartIdx);
				} else {
					ret=SearchEPGCell(chIdx,432,"left");
					if(ret) {
						EpgBlur(focus);
						EpgFocus(ret);
					}
					else scfocusFromEPG();
				}
				unlockScreen();
			} else {
				lockScreen();
				scfocusFromEPG();
				unlockScreen();
			}

		} else {
			lockScreen();
			EpgBlur(focus);
			EpgFocus("cell"+idx);
			unlockScreen();
		}
	}
	//左キー
	else if(keyCode == 3) {
		chidx = GetChIdxFromId(focus);
		if(chidx == -1) return;
		//現在の縦座標を取得、px除去してnumber化
		toploc = String(getElementById(focus).normalStyle.top);
		toploc = parseInt(toploc.substring(0,toploc.length -2),10);

		ret=SearchEPGCell(chidx,toploc,"left");
		if(ret) {
			lockScreen();
			EpgBlur(focus);
			EpgFocus(ret);
			unlockScreen();
			flag = true;
		}
		//フォーカスがあたらなかったので、スクロールを試みる
		if(flag != true){
			lockScreen();
			ShowNextChannelList("left");
			unlockScreen();
		}
	}
	//右キー
	else if(keyCode == 4) {
		chidx = GetChIdxFromId(focus);
		if(chidx == -1) return;
		//現在の縦座標を取得、px除去してnumber化
		toploc = String(getElementById(focus).normalStyle.top);
		toploc = parseInt(toploc.substring(0,toploc.length -2),10);

		if(chidx != 6) {
			ret=SearchEPGCell(chidx,toploc,"right");
			if(ret) {
				lockScreen();
				EpgBlur(focus);
				EpgFocus(ret);
				unlockScreen();
				flag = true;
			}
		}
		//フォーカスがあたらなかったので、スクロールを試みる
		if(flag != true){
			lockScreen();
			ShowNextChannelList("right");
			unlockScreen();
		}
	}
}
function PopKeyDown(){
	var keyCode = document.currentEvent.keyCode;
	var focus;
	if(document.currentFocus) focus=document.currentFocus.id;
	else return;
	if(focus.substring(0,7) != "pop_btn") return;
	idx = parseInt(focus.substring(7,focus.length),10);

	//決定キー
	if(keyCode == 18) {
		if(focus == "pop_btn4") {
			playSound(7);
			gPopupPage++;
			if(gPopupPage >= gPopupMaxPage) gPopupPage = 0;
			lockScreen();
			setText("pop_evt_text",String(gPageTxt[gPopupPage]));
			setText("pop_page",String(gPopupPage+1) + "/" + String(gPopupMaxPage));
			unlockScreen();
		} else if(focus == "pop_btn5"){
			playSound(7);
			lockScreen();
			CloseEventInfoPopup();
			unlockScreen();
		}
	}
	//戻るキー
	else if(keyCode == 19) {
		playSound(7);
		lockScreen();
		CloseEventInfoPopup();
	}
	//上キー
	else if(keyCode == 1) {
		if(isNaN(idx)) return;
		idx--;
		if(idx < 1) idx=5;
		lockScreen();
		PopBlur(focus);
		PopFocus("pop_btn"+idx);
		unlockScreen();
	}
	//下キー
	else if(keyCode == 2) {
		if(isNaN(idx)) return;
		idx++;
		if(idx > 5) idx=1;
		lockScreen();
		PopBlur(focus);
		PopFocus("pop_btn"+idx);
		unlockScreen();
	}
	//左キー
	else if(keyCode == 3) {
	}
	//右キー
	else if(keyCode == 4) {
	}
}
//左右キー押下時のチャンネル移動処理
function SearchEPGCell(chidx,toploc,direction){
	if(direction == "right") direction = 1;
	else if(direction == "left") direction = -1;
	else return null;
	if(isNaN(toploc)) return null;

	var tgtloc;
	var tmptxt;
	var tgtid;
	var tgtCh;
	var i;

	while(true){
		chidx += direction;
		//右スクロールが必要な場合
		if(chidx > 7) return null;
		//左スクロールが必要な場合
		if(chidx < 0) return null;
		tgtCh = gCHList.getIdxCHInfo(gVisibleChIdxArr[chidx]);
		if(!tgtCh) continue;
		if(isNaN(tgtCh.objStartIdx)) continue;
		if(isNaN(tgtCh.objEndIdx))   continue;

		tgtid="";

		//現在の縦座標の位置を含む要素があるかを検索
		for(i=tgtCh.objStartIdx;i<=tgtCh.objEndIdx;i++){
			//表示されている要素であったら、縦座標を取得、px除去してnumber化
			if(! isVis("cell"+i)) continue;
			tgtloc = String(getElementById("cell"+i).normalStyle.top);
			tgtloc = parseInt(tgtloc.substring(0,tgtloc.length -2),10);

			//現在と同じかそれより上で始まっているので、高さを加算して範囲を出し、入っているかチェック
			if(tgtloc <= toploc) {
				//直上の要素を覚えておく
				tgtid="cell"+i;
				tmptxt = String(getElementById("cell"+i).normalStyle.height);
				tgtloc =+parseInt(tmptxt.substring(0,tmptxt.length -2),10);
				if(tgtloc >= toploc) return "cell"+i;
			}
		}
		//含まれているものが無かったが、直上の要素が見つかっていた場合
		if(tgtid != "") return tgtid;
		//上からフォーカスの当てられる要素を探す
		else for(i=tgtCh.objStartIdx;i<=tgtCh.objEndIdx;i++){
			if(isVis("cell"+i)) return "cell"+i;
		}
		//何も見つからなかったらループ
	}
	//見つからないまま最後まで到達したらnullを返却
	return null;
}
//チャンネルの横方向スクロールを行う
function ShowNextChannelList(direction){
	if(direction == "right") direction = 7;
	else if(direction == "left") direction = -7;
	else return;

	var oldStartCh = gStartChIdx;

	var chListLen = gCHList.getCHListLength();
	var i;
	var tgtIdx;
	var target;
	gStartChIdx += direction;

	if(gStartChIdx >= chListLen){
		gStartChIdx = gStartChIdx - chListLen;
	}
	if(gStartChIdx<0){
		gStartChIdx = chListLen - gStartChIdx+1;
	}

	for(i=0;i<7;i++){
		ClearChannelEvent(gVisibleChIdxArr[i]);
	}

	WriteChData(gStartChIdx);
	for(i=0;i<7;i++){
		GetChannelEvent(gVisibleChIdxArr[i],gEPGStartTime);
	}
	if(document.currentFocus) EpgBlur(document.currentFocus.id);
	WriteEventList();

	gPlaySound=false;
	if(direction == 7) target="cell0";
	if(direction == -7) target=SearchEPGCell(8,0,"left");
	if(isVis(target)) EpgFocus(target);
	else setFcs("scbtn");
	gPlaySound=true;
}
//ID値からチャンネルインデックスを取得する
function GetChIdxFromId(id){
	var leftIdx = new Array("100px","210px","320px","430px","540px","650px","760px");
	if(String(id).substring(0,4) != "cell" ) return;
	if(!getElementById(id)) return;
	var leftpos = getElementById(id).normalStyle.left;
	for(var i=0;i<7;i++){
		if(leftIdx[i] == String(leftpos)) return i;
	}
	return -1;

}
//番組セルにフォーカスを当てる処理
function EpgFocus(id){
	var tgt=id.substring(4,id.length);
	playSound(9);
	setFcs(id);
	getElementById("celltxt"+tgt).normalStyle.backgroundColorIndex = "29";
	setTxtCol("celltxt"+tgt,"0","156 200");
	WriteEventInfo(id);
}
//番組セルからフォーカスを外す処理
function EpgBlur(id){
	var tgt=id.substring(4,id.length);
	getElementById("celltxt"+tgt).normalStyle.backgroundColorIndex = "18";
	setTxtCol("celltxt"+tgt,"7","25 45");
}
//ポップアップボタンにフォーカスを当てる処理
function PopFocus(id){
	playSound(9);
	setFcs(id);
	if(id == "pop_btn4") setTxtCol("pop_page","0","128 200");
	showElem(id+"_f");
}
//番組セルからフォーカスを外す処理
function PopBlur(id){
	if(id == "pop_btn4") setTxtCol("pop_page","7","101 161");
	hideElem(id+"_f");
}


function onload(){

	gState.scupkey=scupkey_epg;
	gState.scdownkey=scdownkey_epg;

	var genres=getGenresForTV(gState.ispid, gState.mode, gState.age);
	var pageInformation = searchTVGenre(genres[0].genre, "sort_title_asc", 1, gState.ispid, gState.mode, gState.age);

	var chInfo;
	var ret;
	var i,j,k;
	var tgt;
	var sidarr=new Array();
	var totalCount = pageInformation.totalCount;

	for(i=0,j=0,k=1;i<totalCount;i++,j++){
		if(j==15){
			k++;
			j=0;
			pageInformation = searchTVGenre(genres[0].genre, "sort_title_asc", k, gState.ispid, gState.mode, gState.age);
		}
		if(pageInformation.contentList[i%15]){
			if(pageInformation.contentList[i%15].broadCastEvent.serviceId){
				sidarr[sidarr.length] =pageInformation.contentList[i%15].broadCastEvent.serviceId;
			}
		}
	}


	GetChannelListFromSidArr(sidarr);

	var date = new Date();
	date = new Date(date.getFullYear(), date.getMonth(), date.getDate(),date.getHours(),0,0,0);
	gEPGStartTime = date;

	lockScreen();

	gStartChIdx = 0;

	WriteChData(gStartChIdx);

	for(i=0;i<7;i++){
		GetChannelEvent(gVisibleChIdxArr[i],gEPGStartTime);
	}
	WriteEventList();

	gPlaySound=false;
	if(isVis("cell0")) EpgFocus("cell0");
	else setFcs("scbtn");
	gPlaySound=true;
	unlockScreen();

}
function onunload(){}
function btnFocus(pId,nId){
	if(pId!="")hideElem(pId+"F");
	showElem(nId+"F");
	setFcs(nId);
	gFcsId=nId;
}



//SID配列を元にチャンネルの基本情報を取得・設定する
function GetChannelListFromSidArr(sidarr){
	var i,sid;
	var chInfo;
	for(i=0;i<sidarr.length;i++){
		if(sidarr[i]){
			sid = sidarr[i];
			chInfo = new CHInfo();
			chInfo.sid = sid;
			chInfo.chNum = iptv_uui.EpgGetIntServiceInfo(0,ORG_NETWORK_ID,sid,1);
			chInfo.name = iptv_uui.EpgGetStringServiceInfo(0,ORG_NETWORK_ID,sid,11);
			chInfo.logo = iptv_uui.EpgGetStringServiceInfo(0,ORG_NETWORK_ID,sid,12);
			gCHList.addCHInfo(chInfo);
		}
	}
}
//生成されたチャンネルリストオブジェクトを使い画面上部のチャンネル一覧部分を描画する
function WriteChData(start){

	var i;
	var tgt;
	var tgtIdx;
	var chListLen = gCHList.getCHListLength();
	for(i=0;i<9;i++){
		tgtIdx = i+start-1;

		if(tgtIdx >= chListLen  ) {
			if(chListLen > 8){
				tgtIdx = tgtIdx - chListLen;
			}
			else {
				setText('ch'+(i+1) +'txt','');
				hideElem("ch"+(i+1));
			}
		}
		if(tgtIdx == -1) {
			if(chListLen > 8){
				tgtIdx =chListLen-1;
			}
			else {
				setText('ch'+(i+1) +'txt','');
				hideElem("ch"+(i+1));
			}
		}
		tgt = gCHList.getIdxCHInfo(tgtIdx);
		if(tgt){
			setText('ch'+(i+1) +'txt','ch:'+tgt.chNum);
			setImg("ch"+(i+1),String(tgt.logo));
			showElem("ch"+(i+1));
		}else{
			setText('ch'+(i+1) +'txt','');
			hideElem("ch"+(i+1));
		}
		if(i>0 && i<8){
			gVisibleChIdxArr[i-1] = tgtIdx;
		}
	}

}

//イベントリストの設定されたgCHListを元に画面を構築する
function WriteEventList(){
	var date;
	var i,j;
	var idx=0;
	var tgtCh;
	var tgtChIdx;
	var tgt;
	var top,height;
	var txt;
	var txt2;
	var txt3;
	var subdate;
	var adddate;
	var duration;
	var offset;
	var chListLen = gCHList.getCHListLength();

	var day = new Array("(日)","(月)","(火)","(水)","(木)","(金)","(土)");
	txt = String(gEPGStartTime.toString()).split("T");
	txt2=String(txt[0]).split("-");

	txt3='[' + parseInt(txt2[1],10) + '月'+parseInt(txt2[2],10)+'日'+day[ gEPGStartTime.getDay() ];
	txt2=String(txt[1]).split(":");
	txt3+=padding("00",txt2[0]) + ':' + padding("00",txt2[1]) + '-]';
	setText("epgtime",txt3);


	for(i=0;i<3;i++){
		date = browser.addDate(gEPGStartTime,i,3);
		setText("timel"+i,String(date.getHours()) );
		setText("timer"+i,String(date.getHours()) );
	}

	for(i=0;i<7;i++){
		tgtChIdx = gStartChIdx+i;
		if(tgtChIdx >= chListLen){
			tgtChIdx = tgtChIdx - chListLen;
		}
		tgtCh = gCHList.getIdxCHInfo(tgtChIdx);
		if(!tgtCh) continue;
		tgtCh.objStartIdx =NaN;
		tgtCh.objEndIdx =NaN;
		if(tgtCh.eventList){
			for(j=0;j<tgtCh.eventList.length;j++){
				if(idx > 99) break;
				top=NaN;
				tgt = tgtCh.eventList[j];

				//開始時刻がスタートより前であったら
				if(browser.subDate(tgt.start , gEPGStartTime,1 ) < 0) {
					top=134;
					offset = 9;
				}
				else {
					subdate = browser.subDate(tgt.start , gEPGStartTime,3 );
					//3時間枠のどの枠に該当するかで初期位置を決める
					if(subdate==0) top = 143;
					else if(subdate==1) top = 231;
					else if(subdate==2) top = 319;
					else continue;
					offset = 0;
					top += (88 * (tgt.start.getMinutes()*1000 / 60) /1000);

				}
				if(!isNaN(top)){
					duration=tgt.duration;
					//上省略の場合は高さを調整
					if(top == 134) {
						duration += browser.subDate(tgt.start,gEPGStartTime,1);
					}
					height = (88 * (duration*1000/60 / 60) /1000) -3 + offset;
					if(height < 1) height = 1;

					if(top + height > 416) height = (416-top);

					txt = padding("00",tgt.start.getMinutes()) + tgt.name;
					txt=Text2EPGTxt(txt,12);

					getElementById("cell"+idx).normalStyle.top =top+"px";
					getElementById("celltxt"+idx).normalStyle.top =(offset-9)+"px";
					setText("celltxt"+idx, txt);

					getElementById("cell"+idx).normalStyle.left =(100+(i*110)) +"px";
					getElementById("cell"+idx).normalStyle.height =height +"px";
					getElementById("celltxt"+idx).normalStyle.height =height +"px";

					showElem("cell"+idx);
					if(isNaN(tgtCh.objStartIdx))tgtCh.objStartIdx=idx;

					idx++;
				}
			}
			if(idx>0) tgtCh.objEndIdx=idx-1;
		}
	}
	for(;idx<100;idx++){
		hideElem("cell"+idx);
	}
}
//対象cellのidに該当する番組情報を画面下部に描画する
function WriteEventInfo(id){
	var tgtidx,tgt;
	var chidx = GetChIdxFromId(id);
	var tgtCh = gCHList.getIdxCHInfo(gVisibleChIdxArr[chidx]);
	var error=0;
	var tmpObj;
	var startTime="";
	var endTime="";
	var timetxt="";
	var idx;
	var day = new Array("(日)","(月)","(火)","(水)","(木)","(金)","(土)");


	if(! isVis(id) ) error=true;
	else if(!tgtCh)  error=true;
	else if(isNaN(tgtCh.objStartIdx)) error=true;
	else if(isNaN(tgtCh.objEndIdx))   error=true;
	else if(id.substring(0,4) != "cell") error=true;
	else idx = parseInt(id.substring(4,id.length),10);

	if(error==0){
		tgtidx = idx - tgtCh.objStartIdx;
		tgt = tgtCh.eventList[tgtidx];
		if(! tgt) error=true;
		else {

			iptv_uui.EpgGetIntEventInfo(1,tgt.eventid,2,NaN);
			iptv_uui.EpgGetIntEventInfo(1,tgt.eventid,3,NaN);

			timetxt += String(tgt.start.getMonth()+1) + "月";
			timetxt += String(tgt.start.getDate()) + "日";
			timetxt += day[tgt.start.getDay()];

			timetxt += String(tgt.start.getHours()) + ":";
			timetxt += padding("00",String(tgt.start.getMinutes()))+"-";
			timetxt += String(tgt.end.getHours()) + ":";
			timetxt += padding("00",String(tgt.end.getMinutes()));

			setText("ch_num","ch"+padding("000",tgtCh.chNum));
			setText("ch_title",String(tgtCh.name));
			setText("ch_evt_time",timetxt);
			setText("ch_evt_title",String(tgt.name));
		}

	}
	//異常であった場合
	if(error == true){
		setText("ch_num","");
		setText("ch_title","");
		setText("ch_evt_time","");
		setText("ch_evt_title","");
		return error;
	}

	return error;

}
function WriteEventInfoPopup(id){

	var tgtidx,tgt;
	var chidx = GetChIdxFromId(id);
	var tgtCh = gCHList.getIdxCHInfo(gVisibleChIdxArr[chidx]);
	var error=false;
	var tmpObj;
	var startTime="";
	var endTime="";
	var timetxt="";
	var idx;
	var i;
	var day = new Array("(日)","(月)","(火)","(水)","(木)","(金)","(土)");
	var txt="";
	var ret="";
	var oldtxt=null;


	if(! isVis(id) ) error=true;
	else if(!tgtCh)  error=true;
	else if(isNaN(tgtCh.objStartIdx)) error=true;
	else if(isNaN(tgtCh.objEndIdx))   error=true;
	else if(id.substring(0,4) != "cell") error=true;
	else idx = parseInt(id.substring(4,id.length),10);

	if(error==false){

		tgtidx = idx - tgtCh.objStartIdx;
		tgt = tgtCh.eventList[tgtidx];
		if(! tgt) error=true;
		else {

			iptv_uui.EpgSelect(0,ORG_NETWORK_ID,tgtCh.sid);
			iptv_uui.EpgGetIntEventInfo(1,tgt.eventid,2,NaN);
			iptv_uui.EpgGetIntEventInfo(1,tgt.eventid,3,NaN);

			i=0;
			while(true){
				ret  = iptv_uui.EpgGetStringEventInfo(1,tgt.eventid,12,i);
				if(ret == "" && oldtxt == "") break;
				oldtxt=ret;
				txt += ret;
				i++;
			}

			gPageTxt = TextToPageText(txt,66,7);

			//分割処理

			gPopupMaxPage = gPageTxt.length;
			gPopupPage = 0;

			timetxt += String(tgt.start.getMonth()+1) + "月";
			timetxt += String(tgt.start.getDate()) + "日";
			timetxt += day[tgt.start.getDay()];

			timetxt += String(tgt.start.getHours()) + ":";
			timetxt += padding("00",String(tgt.start.getMinutes()))+"-";
			timetxt += String(tgt.end.getHours()) + ":";
			timetxt += padding("00",String(tgt.end.getMinutes()));

			setText("pop_ch_num","ch"+padding("000",tgtCh.chNum));
			setText("pop_ch_title",String(tgtCh.name));
			setText("pop_evt_time",timetxt);
			setText("pop_evt_title",String(tgt.name));
			setText("pop_evt_text",String(gPageTxt[0]));
			setText("pop_page",String(gPopupPage+1) + "/" + String(gPopupMaxPage));
			setImg("pop_ch_img",String(tgtCh.logo));
			showElem("popup");
		}

	}
	//異常であった場合
	if(error){
		setText("pop_ch_num","");
		setText("pop_ch_title","");
		setText("pop_evt_time","");
		setText("pop_evt_title","");
		setText("pop_page","");
		hideElem("popup");
		return error;
	}

	gPlaySound=false;
	PopFocus("pop_btn5");
	gPlaySound=true;

	gOldFocus = id;

	return error;

}
function CloseEventInfoPopup(){
	var focus = false;

	setText("pop_ch_num","");
	setText("pop_ch_title","");
	setText("pop_evt_time","");
	setText("pop_evt_title","");
	setText("pop_page","");
	hideElem("pop_btn1_f");
	hideElem("pop_btn2_f");
	hideElem("pop_btn3_f");
	hideElem("pop_btn4_f");
	hideElem("pop_btn5_f");
	hideElem("popup");

	gPlaySound=false;
	if(gOldFocus) {
		if(isVis(gOldFocus)) {
			EpgFocus(gOldFocus);
			focus=true;
		}
	}
	if(focus == false){
		if(isVis("cell0")) EpgFocus("cell0");
		else setFcs("scbtn");
	}
	gPlaySound=true;
}
//対象チャンネルの開始時刻からのイベントリストを生成する
function GetChannelEvent(idx,start_time){
	var ret;
	var tgt;
	tgt = gCHList.getIdxCHInfo(idx);
	if(tgt){
		ret = GetEventList(0,ORG_NETWORK_ID,tgt.sid,start_time);
		if(ret) {
			tgt.eventList = ret;
			tgt.startTime = start_time;
		}
	}
}
//対象チャンネルのイベントリストをクリアする
function ClearChannelEvent(idx){
	var ret;
	var tgt;
	tgt = gCHList.getIdxCHInfo(idx);
	tgt.eventList = null;
	tgt.startTime = null;
}
//startTimeより3時間分のイベントリストを取得する
function GetEventList(type,nid,sid,startDate){
	var target;
	var endDate = browser.addDate(startDate,3,3);
	var startTime = DateObj2time_t(startDate);

	var tgt_start;
	var tgt_start_date;
	var tgt_duration;
	var tgt_end_date;

	var eventInfo;
	var ret=new Array();

	iptv_uui.EpgSelect(type,nid,sid);
	var eid = iptv_uui.EpgFindEventId(startTime,10800);

	if(eid < 0) return null;

	while (true){
		eventInfo = new CHEventInfo();

		tgt_start = iptv_uui.EpgGetIntEventInfo(1,eid,0,null);

		if(tgt_start < 0) return ret;

		tgt_start_date = time_t2DateObj(tgt_start);

		tgt_duration = iptv_uui.EpgGetIntEventInfo(1,eid,1,null);
		tgt_end_date = browser.addDate(tgt_start_date,tgt_duration,1);

		eventInfo.start = tgt_start_date;
		eventInfo.duration = tgt_duration;
		eventInfo.end = tgt_end_date;
		eventInfo.name  = iptv_uui.EpgGetStringEventInfo(1,eid,10,null);
		eventInfo.text  = iptv_uui.EpgGetStringEventInfo(1,eid,11,null);
		eventInfo.eventid  = eid;

		iptv_uui.ReserveGetReserveIdByEvent(type,nid,sid,eid,null);
		iptv_uui.EpgGetIntEventInfo(1,eid,2,0);
		iptv_uui.EpgGetIntEventInfo(1,eid,3,0);
		iptv_uui.EpgGetIntEventInfo(1,eid,9,0);

		ret[ret.length] = eventInfo;

		if(browser.subDate(endDate,tgt_end_date,2) <= 0) return ret;
		else eid = iptv_uui.EpgGetNextEventId(eid);
	}
	return null;
}

//ショートカット関連

//ショートカットエリアにおける上下キー処理
function scupkey_epg(){
	var ret=SearchEPGCell(8,432,"left");
	if(ret != null) {
		lockScreen();
		scblur(gScIdx);
		EpgFocus(ret);
		unlockScreen();
	}
}
function scdownkey_epg(){
	var ret=SearchEPGCell(8,0,"left");
	if(ret != null) {
		lockScreen();
		scblur(gScIdx);
		EpgFocus(ret);
		unlockScreen();
	}
}
function scfocusFromEPG(){
	if(document.currentFocus) EpgBlur(document.currentFocus.id);
	scFocus();
}

//common.ecmの内容を置換
var gScbtns=new Array("bt_epg_s_bk","bt_epg_s_home");
var gScFuncs=new Array(launchTv,launchHome);
function scfocus(idx){
	gScIdx=idx;
	playSound(9);
	var ext="-f.png";
	var left=new Array("0px","68px");
	var width=new Array("70px","36px");
	getElementById("scbtn").normalStyle.left=left[idx];
	getElementById("scbtn").normalStyle.width=width[idx];
	setImg("scbtn","images/"+gScbtns[idx]+ext);
}
//ショートカットスクリプトここまで

function Text2EPGTxt(txt,outcol){
	var i,j,k;
	var col=0;
	var ret=new Array();
	var len;
	var crlf = String.fromCharCode(0x0d,0x0a);

	for(j=0;j<txt.length;j++){
		for(j=0;j<txt.length;j++){
			//1byte
			if(txt.charCodeAt(j) <= 0xff){
				len=1;
			}
			//2byte
			else if(txt.charCodeAt(j) > 0xff){
				len=2;
			}
			col=col+len;
			//1行の文字数を超えた
			if(col > outcol){
				col=len+2;
				ret+=crlf+"　";
			}
			ret+=txt.charAt(j);
		}
	}
	if(col<outcol){
		ret+=crlf+"　";
		col=2;
	}
	return ret;
}
function TextToPageText(text,outcol,outrow){
	var i,j;
	var col=0;
	var row=0;
	var page=0;
	var retarr=new Array();
	var tmpArr=new Array();
	var txt="";
	var len;
	var crlf = String.fromCharCode(0x0d,0x0a);

	tmpArr = text.split(crlf);
	
	for(i=0;i<tmpArr.length;i++){
		txt=tmpArr[i];
		for(j=0;j<txt.length;j++){
			for(j=0;j<txt.length;j++){
				//1byte
				if(txt.charCodeAt(j) <= 0xff){
					len=1;
				}
				//2byte
				else if(txt.charCodeAt(j) > 0xff){
					len=2;
				}
				col=col+len;
				//1行の文字数を超えた
				if(col > outcol){
					row++;
					col=len;
					if(!retarr[page])retarr[page]="";
					retarr[page]+=crlf;
					//1ページの文字数を超えた
					if(row >= outrow){
						page++;
						row=0;
					}
				}
				if(!retarr[page])retarr[page]="";
				retarr[page]+=txt.charAt(j);
			}
		}
		if(col<outcol){
			if(!retarr[page])retarr[page]="";
			retarr[page]+=crlf;
			row++;
			col=0;
			if(row >= outrow){
				page++;
				row=0;
			}
		}
	}
	return retarr;
}
function DateObj2time_t(date){
	var time_t = new Date(1970,0,1,0,0,0,0);
	return browser.subDate(date,time_t,1);
}
//POSIX Time→Dateオブジェクト変換関数
function time_t2DateObj(time_t){
	var date = new Date(1970,0,1,0,0,0);
	return  browser.addDate(date,time_t,1);
}

//データ管理オブジェクト群
function CHList(){
	this.getSidCHInfo = GetSidCHInfo;
	this.getIdxCHInfo = GetIdxCHInfo;
	this.addCHInfo = AddCHInfo;
	this.getCHListLength = GetCHListLength;
	this.clearCHList = ClearCHList;
	this.chList = new Array();
}
function CHInfo(){
	this.sid = NaN;
	this.chNum = NaN;
	this.name = "";
	this.logo = "";

	this.objStartIdx = NaN;
	this.objEndIdx = NaN;
	this.eventList = new Array();
	this.startTime = null;
}
function CHEventInfo(){
	this.start = null;
	this.end   = null;
	this.duration = null;
	this.name  = "";
	this.eventid  = NaN;
}
function GetSidCHInfo(sid){
	if(isNaN(sid)) return null;
	var i;
	for(i=0;i<this.chList.length;i++){
		target = this.chList[i];
		if(target.sid == sid) return target;
	}
	return null;
}
function GetIdxCHInfo(idx){
	if(isNaN(idx)) return null;
	return this.chList[idx];
}
function AddCHInfo(chInfo){
	if(! chInfo) return -1;
	if(! chInfo.sid ) return -2;
	var idx = this.chList.length;
	this.chList[idx] = chInfo;
	return idx;
}
function ClearCHList(){
	this.chList = new Array();
}
function GetCHListLength(){
	return this.chList.length;
}
//データ管理オブジェクト群ここまで


//BML Extension Functionダミー関数群ここから
//ダミーAPI宣言
var iptv_uui = new IPTVuuiFunc();
	//iptv_uui.onStateChanged = onStateChanged;
	//iptv_uui.onRateChangeTo = onRateChangeTo;
	//iptv_uui.onServiceChanged = onServiceChanged;
	//iptv_uui.onCurrentEventId = onCurrentEventId;

//ダミーイベントハンドラ
function onStateChangedEvt(){
	if(iptv_uui.onStateChanged) iptv_uui.onStateChanged(iptv_uui.Media2Status);
}
function onRateChangeToEvt(){
	if(iptv_uui.onRateChangeTo) iptv_uui.onRateChangeTo(iptv_uui.Media2GetRate(2),iptv_uui.Media2GetRate(1));
}
function onServiceChangedEvt(){
	if(iptv_uui.onServiceChanged) iptv_uui.onServiceChanged(iptv_uui.Media2iptvNetworkId,iptv_uui.Media2iptvServiceId);
}
function onCurrentEventIdEvt(){
	iptv_uui.EpgEpgGetCurEvtIdTimer=NaN;
	if(iptv_uui.onCurrentEventId) iptv_uui.onCurrentEventId(0,iptv_uui.EpgNetworkId,iptv_uui.EpgServiceId);
}

//スタブ
function IPTVuuiFunc(){

	this.Media2OpenPlayControl	= Media2OpenPlayControl;
	this.Media2Start			= Media2Start;
	this.Media2Pause			= Media2Pause;
	this.Media2Stop				= Media2Stop;
	this.Media2SetRate			= Media2SetRate;
	this.Media2GetRate			= Media2GetRate;
	this.Media2GetPosition		= Media2GetPosition;
	this.Media2GetDuration		= Media2GetDuration;

	this.Media2CheckService		= Media2CheckService;
	this.Media2OpenService		= Media2OpenService;
	this.Media2GetServiceId		= Media2GetServiceId;

	this.Media2Status			= 5;
	this.Media2Rate				= NaN;
	this.Media2Position			= NaN;
	this.Media2Duration			= NaN;
	this.Media2PauseTime		= NaN;

	this.Media2iptvServiceId	= NaN;
	this.Media2iptvNetworkId	= NaN;
	this.Media2iptvType			= NaN;

	this.EpgSelect				= EpgSelect;
	this.EpgGetStringServiceInfo= EpgGetStringServiceInfo;
	this.EpgGetIntServiceInfo	= EpgGetIntServiceInfo;
	this.EpgGetCurrentEventId	= EpgGetCurrentEventId;
	this.EpgGetIntEventInfo		= EpgGetIntEventInfo;
	this.EpgGetStringEventInfo	= EpgGetStringEventInfo;

	this.EpgFindEventId			= EpgFindEventId;
	this.EpgGetNextEventId		= EpgGetNextEventId;

	this.EpgEpgGetCurEvtIdTimer = NaN;

	this.EpgServiceId	= NaN;
	this.EpgNetworkId	= NaN;
	this.EpgType		= NaN;

	this.ReserveGetCurrent		= ReserveGetCurrent;
	this.ReserveGetFindResult	= ReserveGetFindResult;
	this.ReserveGetStringFindResult	= ReserveGetStringFindResult;
	this.ReserveGetReserveIdByEvent	= ReserveGetReserveIdByEvent;

	//ダミーイベントハンドラ。設定してある場合、当該イベントを発生させうる処理実行時にタイマが設定される。
	this.onStateChanged			= null;
	this.onRateChangeTo			= null;
	this.onServiceChanged		= null;

	this.objectCreateTime		= new Date();

}

//エラーコード群。
//※ダミー実装API群でのみ使用すること。BML本体での使用は禁止※
var UUI_MEDIA_ERR_OK				= 0;  // 正常終了
var UUI_MEDIA_ERR_NG				= -1; // その他のエラー
var UUI_MEDIA_ERR_UNSUPPORTED		= -2; // 指定機能が未サポート
var UUI_MEDIA_ERR_UNAVAILABLE		= -3; //
var UUI_MEDIA_ERR_ENDOFDATA			= -4; //
var UUI_MEDIA_ERR_INVALID_PARAMETER	= -5; // 引数エラー
var UUI_MEDIA_ERR_NOT_READY 		= -6; // 処理中
var UUI_MEDIA_ERR_INVALID_STATE 	= -7; // Media Playerの動作ステートが適切でない
var UUI_MEDIA_ERR_FORBIDDEN 		= -8; //
var UUI_MEDIA_ERR_EXPIRED			= -9; //

function Media2OpenPlayControl(url,position){
	var date = new Date();
	if(isNaN(position )) position=0;

	iptv_uui.Media2Status=3;
	iptv_uui.Media2Rate=0;
	iptv_uui.Media2Position=browser.addDate(date,(-1)*position,0);
	iptv_uui.Media2Duration=200000000;
	browser.setInterval("onStateChangedEvt();",100,1);
	return 0;
}
function Media2Start(){
	if(iptv_uui.Media2Status==3) {
		return;
	}
	else if(iptv_uui.Media2Status == 2) {
		if(iptv_uui.Media2Rate!=0) {
			iptv_uui.Media2Rate=0;
			browser.setInterval("onRateChangeToEvt();",100,1);
		}
		var date = new Date();
		var subdate = browser.subDate(date,iptv_uui.Media2PauseTime,0);
		iptv_uui.Media2Position = browser.addDate(iptv_uui.Media2Position,subdate,0);
	}
	iptv_uui.Media2Status=3;
	browser.setInterval("onStateChangedEvt();",100,1);
}
function Media2Pause(){
	if(iptv_uui.Media2Status==2) return;

	iptv_uui.Media2PauseTime = new Date();
	iptv_uui.Media2Status=2;
	browser.setInterval("onStateChangedEvt();",100,1);
}
function Media2Stop(){
	if(iptv_uui.Media2Status==5) return;
	iptv_uui.Media2Status=5;
	browser.setInterval("onStateChangedEvt();",100,1);
}
function Media2SetRate(isOffset,param){
	var oldparam = iptv_uui.Media2Rate;
	if(isNaN(isOffset) )return;
	if(isNaN(param) )return;
	if(isOffset == 0) {
		if(param == 100) iptv_uui.Media2Rate = 0;
		else reutrn;
	}
	else if(isOffset == 1) {
		if(param == 1) iptv_uui.Media2Rate++;
		if(param == -1) iptv_uui.Media2Rate--;
		if(iptv_uui.Media2Rate < -4) iptv_uui.Media2Rate = -4;
		if(iptv_uui.Media2Rate > 4) iptv_uui.Media2Rate = 4;
	}
	else return;
	if(iptv_uui.Media2Rate != oldparam) {
		browser.setInterval("onRateChangeToEvt();",100,1);
	}

}
function Media2GetRate(property){
	if(property == 1)
		return iptv_uui.Media2Rate;
	else if(property == 2){
		if(iptv_uui.Media2Rate >= 0)  return (iptv_uui.Media2Rate +1) *100;
		else return (iptv_uui.Media2Rate) *100;
	}
}
function Media2GetPosition(){
	if(! iptv_uui.Media2Position) return NaN;
	var time1 = new Date();

	if(iptv_uui.Media2Status==3)
		return browser.subDate(time1,iptv_uui.Media2Position,0);
	else if(iptv_uui.Media2Status==2){
		return browser.subDate(iptv_uui.Media2PauseTime,iptv_uui.Media2Position,0);
	}
}
function Media2GetDuration(){
	return iptv_uui.Media2Duration;
}
function Media2CheckService(type,network_id,service_id,skip_mode){
	return UUI_MEDIA_ERR_OK;
}
function Media2OpenService(type,network_id,service_id){

	iptv_uui.Media2iptvServiceId	= service_id;
	iptv_uui.Media2iptvNetworkId	= network_id;
	iptv_uui.Media2iptvType			= type;

	browser.setInterval("onServiceChangedEvt();",100,1);


/*
onServiceChanged
onAudioChanged
onCopyControlChanged
onCaptionChanged
onVideoChanged
onParentalChange
*/

}
function Media2GetServiceId(type,network_id,service_id,mode,property,skip_mode,service_order){
	if(isNaN(mode)) return;

	var targetNetworkId=NaN;
	var targetServiceId=NaN;

	//CH-
	if(mode == 0) {
		targetServiceId=service_id-1;
		targetNetworkId=network_id-1;
		if(targetServiceId<0) targetServiceId=0xffff;
		if(targetNetworkId<0) targetNetworkId=0xffff;
	}
	//CH+
	else if(mode == 1) {
		targetServiceId=service_id+1;
		targetNetworkId=network_id+1;
		if(targetServiceId>0xffff) targetServiceId=0;
		if(targetNetworkId>0xffff) targetNetworkId=0;
	}
	//先頭を取得 本ダミーでは未実装
	else if(mode == 2) {
	}
	//スキップチェック 本ダミーでは未実装
	else if(mode == 3) {
	}
	//デフォルト取得 本ダミーでは未実装
	else if(mode == 4) {
	}
	//現在値を取得
	else if(mode == 6) {
		if(iptv_uui.Media2iptvType != type) return UUI_MEDIA_ERR_UNAVAILABLE;
		targetServiceId=iptv_uui.Media2iptvServiceId;
		targetNetworkId=iptv_uui.Media2iptvNetworkId;

	}
	else return UUI_MEDIA_ERR_INVALID_PARAMETER;


	if(property == 0){
		if(!isNaN(targetNetworkId)) return targetNetworkId;
		else UUI_MEDIA_ERR_UNSUPPORTED;
	}
	else if(property == 1)
		if(!isNaN(targetServiceId)) return targetServiceId;
		else UUI_MEDIA_ERR_UNSUPPORTED;
	else return UUI_MEDIA_ERR_INVALID_PARAMETER;

	return UUI_MEDIA_ERR_NG;
}



function EpgSelect(type,network_id,service_id){
	iptv_uui.EpgServiceId	= service_id;
	iptv_uui.EpgNetworkId	= network_id;
	iptv_uui.EpgType		= type;
	return UUI_MEDIA_ERR_OK;
}
function EpgGetStringServiceInfo(type,network_id,service_id,property){
	if(property == 11){
		return "チャンネル"+service_id;
	}
	else if(property == 12){
		return "images/dummy_logo/chLogo_"+service_id+".png";
	}
}
function EpgGetIntServiceInfo(type,network_id,service_id,property){
	if(property == 0){
		return type;
	}
	else if(property == 1){
		return service_id;
	}
	else if(property == 2){
		return -1;
	}
	else if(property == 3){
		return 120;
	}
	else if(property == 4){
		return 90;
	}
	else if(property == 5){
		return 0;
	}
}
function EpgGetCurrentEventId(){
	if(! isNaN(iptv_uui.EpgEpgGetCurEvtIdTimer)) browser.clearTimer(iptv_uui.EpgEpgGetCurEvtIdTimer);
	iptv_uui.EpgEpgGetCurEvtIdTimer = browser.setInterval("onCurrentEventIdEvt();",200,1);
}
function EpgGetIntEventInfo(eit_type,event_id,description_type,param){

	if(isNaN(event_id) ) return UUI_EPG_ERR_INVALID_EVENT_ID;
	if(event_id < 0 ) return UUI_EPG_ERR_INVALID_EVENT_ID;
	if(isNaN(description_type)) return UUI_EPG_ERR_NG;

	var ret = browser.transmitTextDataOverIP(STUB_PATH+"tsv_epg/getIntEventInfo."
		+iptv_uui.EpgType +"."+ iptv_uui.EpgNetworkId +"."+ iptv_uui.EpgServiceId +"_"+ event_id +".tsv" , null, "euc-jp");
	if(isNaN(ret[0])) return -1;
	if(ret[0] < 0) return -1;


	var data =  ret[2].split("\r\n");

	var target = (data[0]).split("\t");

	var date = this.objectCreateTime;
	date = new Date(date.getFullYear(), date.getMonth(), date.getDate(),date.getHours(),0,0,0);

	if(description_type == 0) {
		return DateObj2time_t(browser.addDate(date,parseInt(target[0],10),1));
	}
	else if(description_type == 1) {
		return parseInt(target[1],10);
	}
	else if(description_type == 2) {
		return parseInt(target[2],10);
	}
	else if(description_type == 3) {
		return parseInt(target[3],10);
	}
	else if(description_type == 4) {
		return parseInt(target[4],10);
	}
	else if(description_type == 5) {
		return parseInt(target[5],10);
	}
	else if(description_type == 6) {
		return parseInt(target[6],10);
	}
	else if(description_type == 7) {
		return parseInt(target[7],10);
	}
	else if(description_type == 8) {
		return parseInt(target[8],10);
	}
	else if(description_type == 9) {
		return parseInt(target[9],10);
	}
	else return UUI_EPG_ERR_NG;

}
function EpgGetStringEventInfo(eit_type,event_id,description_type,param){

	var ret = browser.transmitTextDataOverIP(STUB_PATH+"tsv_epg/getIntEventInfo."
		+iptv_uui.EpgType +"."+ iptv_uui.EpgNetworkId +"."+ iptv_uui.EpgServiceId +"_"+ event_id+".tsv" , null, "euc-jp");
	if(isNaN(ret[0])) return "";
	if(ret[0] < 0) return "";

	var data =  ret[2].split("\r\n");

	var target = (data[0]).split("\t");

	if(description_type == 10) {
		return target[10];
	}
	else if(description_type == 11) {
		return target[11];
	}
	else if(description_type == 12) {
		ret = target[12+param];
		if(! ret) return "";
		else return ret;
	}
	else return "";
}
function ReserveGetCurrent(index){
	return index;
}
function ReserveGetFindResult(index,property){
	return "";
}
function ReserveGetStringFindResult(index,property){
	return "";
}
function EpgFindEventId(start_time,duration){
	iptv_uui.objectCreateTime=time_t2DateObj(start_time);
	var ret = browser.transmitTextDataOverIP(STUB_PATH+"tsv_epg/epgfindEventId."
		+iptv_uui.EpgType +"."+ iptv_uui.EpgNetworkId +"."+ iptv_uui.EpgServiceId +".tsv" , null, "euc-jp");
	if(isNaN(ret[0])) return -1;
	if(ret[0] < 0) return -1;
	var data =  ret[2].split("\r\n");
	return parseInt(data[0],10);
}
function EpgGetNextEventId(event_id){
	return event_id+1;
}
function ReserveGetReserveIdByEvent(type,network_id,service_id,event_id,reserve){
	return "";
}
//BML Extension Functionダミー関数群ここまで


]]></script>
</head>
<body id="body" onload="onload();" onunload="onunload();">

<div style="left:0px;top:0px;width:960px;height:540px;">
	<object type="image/X-arib-png" data="images/bg_epg.png" style="width:960px;height:540px;"/>
	<object type="image/X-arib-png" data="images/logo_epg.png" style="left:35px;top:15px;width:200px;height:30px;"/>
	<object type="image/X-arib-png" data="images/tv.png" style="left:240px;top:16px;width:115px;height:28px;"/>

	<object id="ch1" type="image/X-arib-png" data="images/noimage_05.png" style="left:0px;top:60px;width:80px;height:45px;visibility:hidden;"/>
	<object id="ch2" type="image/X-arib-png" data="images/noimage_05.png" style="left:110px;top:60px;width:80px;height:45px;visibility:hidden;"/>
	<object id="ch3" type="image/X-arib-png" data="images/noimage_05.png" style="left:220px;top:60px;width:80px;height:45px;visibility:hidden;"/>
	<object id="ch4" type="image/X-arib-png" data="images/noimage_05.png" style="left:330px;top:60px;width:80px;height:45px;visibility:hidden;"/>
	<object id="ch5" type="image/X-arib-png" data="images/noimage_05.png" style="left:440px;top:60px;width:80px;height:45px;visibility:hidden;"/>
	<object id="ch6" type="image/X-arib-png" data="images/noimage_05.png" style="left:550px;top:60px;width:80px;height:45px;visibility:hidden;"/>
	<object id="ch7" type="image/X-arib-png" data="images/noimage_05.png" style="left:660px;top:60px;width:80px;height:45px;visibility:hidden;"/>
	<object id="ch8" type="image/X-arib-png" data="images/noimage_05.png" style="left:770px;top:60px;width:80px;height:45px;visibility:hidden;"/>
	<object id="ch9" type="image/X-arib-png" data="images/noimage_05.png" style="left:880px;top:60px;width:80px;height:45px;visibility:hidden;"/>


	<p id="ch1txt" style="left:16px;top:109px;width:48px;height:16px;font-size:16px;text-align:center;color-index:7;grayscale-color-index:25 109;"><![CDATA[]]></p>
	<p id="ch2txt" style="left:126px;top:109px;width:48px;height:16px;font-size:16px;text-align:center;color-index:7;grayscale-color-index:25 109;"><![CDATA[]]></p>
	<p id="ch3txt" style="left:236px;top:109px;width:48px;height:16px;font-size:16px;text-align:center;color-index:7;grayscale-color-index:25 109;"><![CDATA[]]></p>
	<p id="ch4txt" style="left:346px;top:109px;width:48px;height:16px;font-size:16px;text-align:center;color-index:7;grayscale-color-index:25 109;"><![CDATA[]]></p>
	<p id="ch5txt" style="left:456px;top:109px;width:48px;height:16px;font-size:16px;text-align:center;color-index:7;grayscale-color-index:25 109;"><![CDATA[]]></p>
	<p id="ch6txt" style="left:566px;top:109px;width:48px;height:16px;font-size:16px;text-align:center;color-index:7;grayscale-color-index:25 109;"><![CDATA[]]></p>
	<p id="ch7txt" style="left:676px;top:109px;width:48px;height:16px;font-size:16px;text-align:center;color-index:7;grayscale-color-index:25 109;"><![CDATA[]]></p>
	<p id="ch8txt" style="left:786px;top:109px;width:48px;height:16px;font-size:16px;text-align:center;color-index:7;grayscale-color-index:25 109;"><![CDATA[]]></p>
	<p id="ch9txt" style="left:896px;top:109px;width:48px;height:16px;font-size:16px;text-align:center;color-index:7;grayscale-color-index:25 109;"><![CDATA[]]></p>

	<p style="left:363px;top:20px;width:60px;height:20px;font-size:20px;text-align:left;color-index:7;grayscale-color-index:25 45;"><![CDATA[番組表]]></p>
	<p id="epgtime" style="left:423px;top:20px;width:210px;height:20px;font-size:20px;text-align:left;color-index:7;grayscale-color-index:25 45;"><![CDATA[]]></p>

</div>



<div style="left:0px;top:431px;width:960px;height:109px;">
	<object id="epg_icon1" type="image/X-arib-png" data="images/icon_sound.png" style="left:39px;top:0px;width:24px;height:24px;"/>
	<object id="epg_icon2" type="image/X-arib-png" data="images/icon_caption.png" style="left:65px;top:0px;width:24px;height:24px;"/>
	<object id="epg_icon3" type="image/X-arib-png" data="images/icon_caption.png" style="left:91px;top:0px;width:24px;height:24px;visibility:hidden;"/>
	<object id="epg_icon4" type="image/X-arib-png" data="images/icon_copy_never.png" style="left:39px;top:26px;width:24px;height:24px;"/>
	<object id="epg_icon5" type="image/X-arib-png" data="images/icon_hivision.png" style="left:65px;top:26px;width:24px;height:24px;"/>
	<object id="epg_icon6" type="image/X-arib-png" data="images/icon_adult.png" style="left:91px;top:26px;width:24px;height:24px;"/>

	<object id="blue" type="image/X-arib-png" data="images/bt_blue_ura.png" style="left:35px;top:56px;width:120px;height:38px;"/>
	<object id="bluef" type="image/X-arib-png" data="images/bt_blue_ura_f.png" style="left:35px;top:56px;width:120px;height:38px;visibility:hidden;"/>
	<object id="green" type="image/X-arib-png" data="images/bt_green_yd.png" style="left:263px;top:56px;width:120px;height:38px;"/>
	<object id="greenf" type="image/X-arib-png" data="images/bt_green_yd_f.png" style="left:263px;top:56px;width:120px;height:38px;visibility:hidden;"/>
	<object id="yellow" type="image/X-arib-png" data="images/bt_yellow_tm.png" style="left:377px;top:56px;width:120px;height:38px;"/>
	<object id="yellowf" type="image/X-arib-png" data="images/bt_yellow_tm_f.png" style="left:377px;top:56px;width:120px;height:38px;visibility:hidden;"/>
</div>

<div style="left:0px;top:0px;width:960px;height:540px;">
	<div id="cell0"  class="cell" onkeydown="EpgKeyDown();"><p id="celltxt0" class="cell"><![CDATA[]]></p></div>
	<div id="cell1"  class="cell" onkeydown="EpgKeyDown();"><p id="celltxt1" class="cell"><![CDATA[]]></p></div>
	<div id="cell2"  class="cell" onkeydown="EpgKeyDown();"><p id="celltxt2" class="cell"><![CDATA[]]></p></div>
	<div id="cell3"  class="cell" onkeydown="EpgKeyDown();"><p id="celltxt3" class="cell"><![CDATA[]]></p></div>
	<div id="cell4"  class="cell" onkeydown="EpgKeyDown();"><p id="celltxt4" class="cell"><![CDATA[]]></p></div>
	<div id="cell5"  class="cell" onkeydown="EpgKeyDown();"><p id="celltxt5" class="cell"><![CDATA[]]></p></div>
	<div id="cell6"  class="cell" onkeydown="EpgKeyDown();"><p id="celltxt6" class="cell"><![CDATA[]]></p></div>
	<div id="cell7"  class="cell" onkeydown="EpgKeyDown();"><p id="celltxt7" class="cell"><![CDATA[]]></p></div>
	<div id="cell8"  class="cell" onkeydown="EpgKeyDown();"><p id="celltxt8" class="cell"><![CDATA[]]></p></div>
	<div id="cell9"  class="cell" onkeydown="EpgKeyDown();"><p id="celltxt9" class="cell"><![CDATA[]]></p></div>
	<div id="cell10" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt10" class="cell"><![CDATA[]]></p></div>
	<div id="cell11" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt11" class="cell"><![CDATA[]]></p></div>
	<div id="cell12" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt12" class="cell"><![CDATA[]]></p></div>
	<div id="cell13" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt13" class="cell"><![CDATA[]]></p></div>
	<div id="cell14" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt14" class="cell"><![CDATA[]]></p></div>
	<div id="cell15" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt15" class="cell"><![CDATA[]]></p></div>
	<div id="cell16" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt16" class="cell"><![CDATA[]]></p></div>
	<div id="cell17" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt17" class="cell"><![CDATA[]]></p></div>
	<div id="cell18" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt18" class="cell"><![CDATA[]]></p></div>
	<div id="cell19" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt19" class="cell"><![CDATA[]]></p></div>
	<div id="cell20" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt20" class="cell"><![CDATA[]]></p></div>
	<div id="cell21" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt21" class="cell"><![CDATA[]]></p></div>
	<div id="cell22" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt22" class="cell"><![CDATA[]]></p></div>
	<div id="cell23" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt23" class="cell"><![CDATA[]]></p></div>
	<div id="cell24" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt24" class="cell"><![CDATA[]]></p></div>
	<div id="cell25" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt25" class="cell"><![CDATA[]]></p></div>
	<div id="cell26" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt26" class="cell"><![CDATA[]]></p></div>
	<div id="cell27" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt27" class="cell"><![CDATA[]]></p></div>
	<div id="cell28" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt28" class="cell"><![CDATA[]]></p></div>
	<div id="cell29" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt29" class="cell"><![CDATA[]]></p></div>
	<div id="cell30" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt30" class="cell"><![CDATA[]]></p></div>
	<div id="cell31" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt31" class="cell"><![CDATA[]]></p></div>
	<div id="cell32" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt32" class="cell"><![CDATA[]]></p></div>
	<div id="cell33" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt33" class="cell"><![CDATA[]]></p></div>
	<div id="cell34" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt34" class="cell"><![CDATA[]]></p></div>
	<div id="cell35" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt35" class="cell"><![CDATA[]]></p></div>
	<div id="cell36" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt36" class="cell"><![CDATA[]]></p></div>
	<div id="cell37" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt37" class="cell"><![CDATA[]]></p></div>
	<div id="cell38" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt38" class="cell"><![CDATA[]]></p></div>
	<div id="cell39" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt39" class="cell"><![CDATA[]]></p></div>
	<div id="cell40" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt40" class="cell"><![CDATA[]]></p></div>
	<div id="cell41" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt41" class="cell"><![CDATA[]]></p></div>
	<div id="cell42" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt42" class="cell"><![CDATA[]]></p></div>
	<div id="cell43" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt43" class="cell"><![CDATA[]]></p></div>
	<div id="cell44" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt44" class="cell"><![CDATA[]]></p></div>
	<div id="cell45" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt45" class="cell"><![CDATA[]]></p></div>
	<div id="cell46" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt46" class="cell"><![CDATA[]]></p></div>
	<div id="cell47" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt47" class="cell"><![CDATA[]]></p></div>
	<div id="cell48" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt48" class="cell"><![CDATA[]]></p></div>
	<div id="cell49" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt49" class="cell"><![CDATA[]]></p></div>
	<div id="cell50" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt50" class="cell"><![CDATA[]]></p></div>
	<div id="cell51" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt51" class="cell"><![CDATA[]]></p></div>
	<div id="cell52" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt52" class="cell"><![CDATA[]]></p></div>
	<div id="cell53" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt53" class="cell"><![CDATA[]]></p></div>
	<div id="cell54" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt54" class="cell"><![CDATA[]]></p></div>
	<div id="cell55" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt55" class="cell"><![CDATA[]]></p></div>
	<div id="cell56" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt56" class="cell"><![CDATA[]]></p></div>
	<div id="cell57" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt57" class="cell"><![CDATA[]]></p></div>
	<div id="cell58" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt58" class="cell"><![CDATA[]]></p></div>
	<div id="cell59" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt59" class="cell"><![CDATA[]]></p></div>
	<div id="cell60" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt60" class="cell"><![CDATA[]]></p></div>
	<div id="cell61" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt61" class="cell"><![CDATA[]]></p></div>
	<div id="cell62" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt62" class="cell"><![CDATA[]]></p></div>
	<div id="cell63" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt63" class="cell"><![CDATA[]]></p></div>
	<div id="cell64" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt64" class="cell"><![CDATA[]]></p></div>
	<div id="cell65" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt65" class="cell"><![CDATA[]]></p></div>
	<div id="cell66" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt66" class="cell"><![CDATA[]]></p></div>
	<div id="cell67" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt67" class="cell"><![CDATA[]]></p></div>
	<div id="cell68" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt68" class="cell"><![CDATA[]]></p></div>
	<div id="cell69" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt69" class="cell"><![CDATA[]]></p></div>
	<div id="cell70" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt70" class="cell"><![CDATA[]]></p></div>
	<div id="cell71" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt71" class="cell"><![CDATA[]]></p></div>
	<div id="cell72" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt72" class="cell"><![CDATA[]]></p></div>
	<div id="cell73" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt73" class="cell"><![CDATA[]]></p></div>
	<div id="cell74" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt74" class="cell"><![CDATA[]]></p></div>
	<div id="cell75" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt75" class="cell"><![CDATA[]]></p></div>
	<div id="cell76" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt76" class="cell"><![CDATA[]]></p></div>
	<div id="cell77" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt77" class="cell"><![CDATA[]]></p></div>
	<div id="cell78" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt78" class="cell"><![CDATA[]]></p></div>
	<div id="cell79" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt79" class="cell"><![CDATA[]]></p></div>
	<div id="cell80" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt80" class="cell"><![CDATA[]]></p></div>
	<div id="cell81" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt81" class="cell"><![CDATA[]]></p></div>
	<div id="cell82" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt82" class="cell"><![CDATA[]]></p></div>
	<div id="cell83" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt83" class="cell"><![CDATA[]]></p></div>
	<div id="cell84" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt84" class="cell"><![CDATA[]]></p></div>
	<div id="cell85" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt85" class="cell"><![CDATA[]]></p></div>
	<div id="cell86" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt86" class="cell"><![CDATA[]]></p></div>
	<div id="cell87" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt87" class="cell"><![CDATA[]]></p></div>
	<div id="cell88" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt88" class="cell"><![CDATA[]]></p></div>
	<div id="cell89" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt89" class="cell"><![CDATA[]]></p></div>
	<div id="cell90" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt90" class="cell"><![CDATA[]]></p></div>
	<div id="cell91" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt91" class="cell"><![CDATA[]]></p></div>
	<div id="cell92" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt92" class="cell"><![CDATA[]]></p></div>
	<div id="cell93" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt93" class="cell"><![CDATA[]]></p></div>
	<div id="cell94" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt94" class="cell"><![CDATA[]]></p></div>
	<div id="cell95" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt95" class="cell"><![CDATA[]]></p></div>
	<div id="cell96" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt96" class="cell"><![CDATA[]]></p></div>
	<div id="cell97" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt97" class="cell"><![CDATA[]]></p></div>
	<div id="cell98" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt98" class="cell"><![CDATA[]]></p></div>
	<div id="cell99" class="cell" onkeydown="EpgKeyDown();"><p id="celltxt99" class="cell"><![CDATA[]]></p></div>
</div>





<div style="left:0px;top:130px;width:960px;height:290px;">
	<object type="image/X-arib-png" data="images/timebase_l.png" style="left:0px;top:0px;width:70px;height:290px;"/>
	<object type="image/X-arib-png" data="images/timebase_r.png" style="left:890px;top:0px;width:70px;height:290px;"/>

	<p id="timel0" style="left:43px; top:47px; width:20px;height:20px;font-size:20px;color-index:18;grayscale-color-index:44 89;"><![CDATA[]]></p>
	<p id="timel1" style="left:43px; top:135px;width:20px;height:20px;font-size:20px;color-index:18;grayscale-color-index:44 89;"><![CDATA[]]></p>
	<p id="timel2" style="left:43px; top:223px;width:20px;height:20px;font-size:20px;color-index:18;grayscale-color-index:44 89;"><![CDATA[]]></p>
	<p id="timer0" style="left:898px;top:47px; width:20px;height:20px;font-size:20px;color-index:18;grayscale-color-index:44 89;"><![CDATA[]]></p>
	<p id="timer1" style="left:898px;top:135px;width:20px;height:20px;font-size:20px;color-index:18;grayscale-color-index:44 89;"><![CDATA[]]></p>
	<p id="timer2" style="left:898px;top:223px;width:20px;height:20px;font-size:20px;color-index:18;grayscale-color-index:44 89;"><![CDATA[]]></p>

</div>

<div style="left:0px;top:0px;width:960px;height:540px;">
	<p id="ch_num" style="left:124px;top:432px;width:80px;height:20px;font-size:20px;text-align:left;color-index:7;grayscale-color-index:25 45;">
		<![CDATA[]]></p>
	<p id="ch_title" style="left:204px;top:432px;width:360px;height:20px;font-size:20px;text-align:left;color-index:7;grayscale-color-index:25 45;">
		<![CDATA[]]></p>
	<p id="ch_evt_time" style="left:692px;top:432px;width:230px;height:20px;font-size:20px;text-align:right;color-index:7;grayscale-color-index:25 45;">
		<![CDATA[]]></p>
	<p id="ch_evt_title" style="left:124px;top:460px;width:780px;height:20px;font-size:20px;text-align:left;color-index:7;grayscale-color-index:25 45;">
		<![CDATA[]]></p>

</div>


<div id="popup" style="left:0px;top:0px;width:960px;height:540px;visibility:hidden;">
	<object type="image/X-arib-png" data="images/base_popInfo_epg.png" style="left:39px;top:139px;width:882px;height:273px;"/>
	<object type="image/X-arib-png" data="images/base_popInfo_chLogo.png" style="left:745px;top:145px;width:160px;height:65px;"/>
	<object id="pop_ch_img" type="image/X-arib-png" data="images/noimage_05.png" style="left:815px;top:154px;width:80px;height:45px;"/>
	<object id="pop_status" type="image/X-arib-png" data="images/status_rec_reserve1.png" style="left:289px;top:184px;width:102px;height:26px;"/>

	<p id="pop_ch_title" style="left:401px;top:187px;width:340px;height:20px;font-size:20px;text-align:right;color-index:7;grayscale-color-index:25 109;">
		<![CDATA[WOWOW1]]></p>
	<p id="pop_ch_num" style="left:753px;top:169px;width:60px;height:20px;font-size:20px;text-align:left;color-index:7;grayscale-color-index:25 109;">
		<![CDATA[ch:191]]></p>
	<p id="pop_evt_title" style="left:54px;top:149px;width:528px;height:24px;font-size:24px;text-align:left;color-index:7;grayscale-color-index:25 45;">
		<![CDATA[ユニコーン…]]></p>
	<p id="pop_evt_time" style="left:54px;top:187px;width:340px;height:20px;font-size:20px;text-align:left;color-index:7;grayscale-color-index:25 109;">
		<![CDATA[3月23日(月)13:00-14:00]]></p>
	<p id="pop_evt_text" style="left:69px;top:224px;width:660px;height:154px;font-size:20px;line-height:22px;color-index:7;grayscale-color-index:25 109;">
		<![CDATA[地球への帰還途中、宇宙船ノストロモ号の乗組員たちは冷凍冬眠から目覚めさせられる。ノストロモ号が謎の信号を受信したのだ。乗組員たちのうち3人が信号の発信元である星に上陸すると、卵のような物体から何か飛び出し、1人の乗組員の顔に張り付く。上陸隊はノストロモ号に回収されるが、乗組員に張り付いたのは恐るべき攻撃能力を持つ宇宙生物(エイリアン)。エイリアンは成長しながら、次々と乗組員に襲いかかっていく……。]]></p>


	<object id="pop_btn1" type="image/X-arib-png" data="images/pop_btn1.png" style="left:745px;top:210px;width:160px;height:42px;" onkeydown="PopKeyDown();"/>
	<object id="pop_btn2" type="image/X-arib-png" data="images/pop_btn2.png" style="left:745px;top:246px;width:160px;height:42px;" onkeydown="PopKeyDown();"/>
	<object id="pop_btn3" type="image/X-arib-png" data="images/pop_btn3.png" style="left:745px;top:282px;width:160px;height:42px;" onkeydown="PopKeyDown();"/>
	<object id="pop_btn4" type="image/X-arib-png" data="images/pop_btn4.png" style="left:745px;top:318px;width:160px;height:42px;" onkeydown="PopKeyDown();"/>
	<object id="pop_btn5" type="image/X-arib-png" data="images/pop_btn5.png" style="left:745px;top:354px;width:160px;height:42px;" onkeydown="PopKeyDown();"/>

	<object id="pop_btn1_f" type="image/X-arib-png" data="images/pop_btn1_f.png" style="left:745px;top:210px;width:160px;height:42px;visibility:hidden;"/>
	<object id="pop_btn2_f" type="image/X-arib-png" data="images/pop_btn2_f.png" style="left:745px;top:246px;width:160px;height:42px;visibility:hidden;"/>
	<object id="pop_btn3_f" type="image/X-arib-png" data="images/pop_btn3_f.png" style="left:745px;top:282px;width:160px;height:42px;visibility:hidden;"/>
	<object id="pop_btn4_f" type="image/X-arib-png" data="images/pop_btn4_f.png" style="left:745px;top:318px;width:160px;height:42px;visibility:hidden;"/>
	<object id="pop_btn5_f" type="image/X-arib-png" data="images/pop_btn5_f.png" style="left:745px;top:354px;width:160px;height:42px;visibility:hidden;"/>

	<p id="pop_page" style="left:843px;top:329px;width:50px;height:20px;font-size:20px;text-align:right;color-index:7;grayscale-color-index:101 161;">
		<![CDATA[]]></p>





</div>


<div id="shortcut" style="left:822px;top:488px;width:138px;height:36px;">
	<object type="image/X-arib-png" data="images/bt_epg_s_bk.png" style="left:0px;width:70px;height:36px;"/>
	<object type="image/X-arib-png" data="images/bt_epg_s_home.png" style="left:68px;width:36px;height:36px;"/>
	<object id="scbtn" type="image/X-arib-png" data="images/bt_epg_s_bk.png" style="width:70px;height:36px;" onkeydown="sckey();"/>
</div>


<div style="left:750px;top:-17px;width:192px;height:57px;">
	<div id="clock" style="left:0px;top:20px;width:192px;height:16px;">
		<p id="clock0" class="clocktext"><![CDATA[]]></p>
		<p id="clock1" class="clocktext" style="left:16px;"><![CDATA[]]></p>
		<p id="clock2" class="clocktext" style="left:32px;"><![CDATA[]]></p>
		<p id="clock3" class="clocktext" style="left:48px;"><![CDATA[]]></p>
		<p id="clock4" class="clocktext" style="left:64px;width:32px;"><![CDATA[]]></p>
		<p id="clock5" class="clocktext" style="left:100px;width:32px;"><![CDATA[]]></p>
		<p id="clock6" class="clocktext" style="left:120px;"><![CDATA[]]></p>
		<p id="clock7" class="clocktext" style="left:136px;width:8px;"><![CDATA[]]></p>
		<p id="clock8" class="clocktext" style="left:144px;"><![CDATA[]]></p>
	</div>
</div>

<div id="default" style="width:2px;height:2px;nav-index:0;" onkeydown="keyDown();"/>
<div id="loading2" style="left:290px;top:233px;width:380px;height:74px;visibility:hidden;">
</div>
</body>
</bml>
