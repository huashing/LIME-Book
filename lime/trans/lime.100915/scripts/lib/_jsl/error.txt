JavaScript Lint 0.3.0 (JavaScript-C 1.5 2004-09-24)
Developed by Matthias Miller (http://www.JavaScriptLint.com)

BML.B24.js
BML.IPTVFJ.js
BML.IptvUUI.js
BML.js
C:\home\demo\bml\bmlParser\scripts\lib\BML.js(2074): lint warning: empty statement or extra semicolon
        } else if (accessElement && (BML.Util.getStyle(accessElement, 'visibility') == 'visible')) {
........^

C:\home\demo\bml\bmlParser\scripts\lib\BML.js(3603): lint warning: couldn't understand control comment using /*@keyword@*/ syntax
@else @*/
^

C:\home\demo\bml\bmlParser\scripts\lib\BML.js(3624): lint warning: couldn't understand control comment using /*@keyword@*/ syntax
/*@end @*/
^

ecl.js
C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(11): lint warning: missing semicolon
	})
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(12): lint warning: missing semicolon
};
^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(18): lint warning: missing semicolon
	})
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(19): lint warning: missing semicolon
};
^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(25): lint warning: missing semicolon
	})
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(26): lint warning: missing semicolon
};
^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(32): lint warning: missing semicolon
	})
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(33): lint warning: missing semicolon
};
^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(39): lint warning: missing semicolon
	},
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(43): lint warning: missing semicolon
	},
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(47): lint warning: missing semicolon
	}).replace(RegExp("["+rj,"g"),function(s){
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(48): warning: test for equality (==) mistyped as assignment (=)?
		var c,i=0,t="%1B%28I";while(c=s.charCodeAt(i++))t+=H(c-65344);return t
...............................................................^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(49): lint warning: missing semicolon
	}).replace(RegExp("[^"+ri+rj,"g"),function(s){
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(50): warning: test for equality (==) mistyped as assignment (=)?
		var a,c,i=0,t="%1B%24B";while(a=s.charAt(i++))t+=(c=JCT8836.indexOf(a))<0?"%21%26":H((c-(c%=94))/94+33)+H(c+33);return t
.............................................................^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(51): lint warning: missing semicolon
	}).slice(8,-1)
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(52): lint warning: missing semicolon
};
^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(59): lint warning: missing semicolon
	},
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(62): lint warning: missing semicolon
	},
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(66): lint warning: missing semicolon
	},
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(70): warning: test for equality (==) mistyped as assignment (=)?
	while(p=P[i++])s+="%24B"==(q=p.substring(0,4))?p.substring(4).replace(rK,K):"%28I"==q?p.substring(4).replace(rJ,J):p.replace(rI,I).substring(2);
......................^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(72): lint warning: missing semicolon
};
^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(78): lint warning: missing semicolon
	},
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(82): lint warning: missing semicolon
	},
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(86): lint warning: missing semicolon
	}).replace(RegExp("[^"+r,"g"),function(s){
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(87): warning: test for equality (==) mistyped as assignment (=)?
		var a,c,i=0,t="%1B%24B";while(a=s.charAt(i++))t+=(c=JCT8836.indexOf(a))<0?"%21%26":H((c-(c%=94))/94+33)+H(c+33);return t
.............................................................^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(88): lint warning: missing semicolon
	}).slice(8,-1)
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(89): lint warning: missing semicolon
};
^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(97): lint warning: missing semicolon
	},
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(101): lint warning: missing semicolon
	},
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(105): warning: test for equality (==) mistyped as assignment (=)?
	while(p=P[i++])s+="%24B"==p.substring(0,4)?p.substring(4).replace(rK,K):p.replace(rI,I).substring(2);
......................^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(107): lint warning: missing semicolon
};
^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(113): lint warning: missing semicolon
	})
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(114): lint warning: missing semicolon
};
^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(119): lint warning: missing semicolon
	})
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(120): lint warning: missing semicolon
};
^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(127): lint warning: missing semicolon
	},
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(133): lint warning: missing semicolon
	}).slice(0,-1)
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(134): lint warning: missing semicolon
};
^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(144): lint warning: missing semicolon
			else{c=(b&15)<<12|B[s.charAt(++i)]<<6|B[s.charAt(++i)];b=B[s.charAt(++i)]}
.................................................................................................^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(146): lint warning: missing semicolon
		}
................^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(148): lint warning: missing semicolon
	})
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(149): lint warning: missing semicolon
};
^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(155): lint warning: missing semicolon
	})
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(156): lint warning: missing semicolon
};
^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(162): lint warning: missing semicolon
	})
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(163): lint warning: missing semicolon
};
^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(168): lint warning: missing semicolon
	};
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(171): lint warning: missing semicolon
	})
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(172): lint warning: missing semicolon
};
^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(179): lint warning: missing semicolon
	})
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(180): lint warning: missing semicolon
};
^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(186): lint warning: regular expressions should be preceded by a left parenthesis, assignment, colon, or comma
	if(/%F[DE]/i.test(str))return /%8[0-9A-D]|%9[0-9A-F]|%A0/i.test(str)?"UTF16LE":"EUCJP";
......................................^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(187): lint warning: regular expressions should be preceded by a left parenthesis, assignment, colon, or comma
	if(/%1B/i.test(str))return /%[A-D][0-9A-F]/i.test(str)?"JIS8":"JIS7";
...................................^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(190): lint warning: missing semicolon
	}),c,C,i=0,T;
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(191): lint warning: block statements containing block statements should use curly braces to resolve ambiguity
	while(0<=(c=parseInt(S.substring(i,i+=2),16))&&i<4092)if(128<=c){
..............................................................^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(194): lint warning: missing semicolon
			if(c<224){T="UTF8";i+=2;continue}
........................................................^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(195): lint warning: missing semicolon
			if(2==parseInt(S.charAt(i+2),16)>>2){T="UTF8";i+=4;continue}
...................................................................................^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(197): lint warning: missing semicolon
		if(142==c&&161<=C&&C<224){if(!T)T="EUCJP";if("EUCJP"==T)continue}
................................................................................^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(200): lint warning: block statements containing block statements should use curly braces to resolve ambiguity
			if((164==c&&C<244||165==c&&C<247)&&161<=C)i+=2;
........................^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(201): lint warning: the else statement could be matched with one of multiple if statements (use curly braces to indicate intent)
			else T=224<=C?"EUCJP":"SJIS";
........................^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(203): lint warning: missing semicolon
	}
........^

C:\home\demo\bml\bmlParser\scripts\lib\ecl.js(205): lint warning: missing semicolon
};
^

prefix.js
suffix.js

0 error(s), 65 warning(s)
Press any key to continue...
