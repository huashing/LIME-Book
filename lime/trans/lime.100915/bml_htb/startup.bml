<?xml version="1.0" encoding="EUC-JP" ?>
<!DOCTYPE bml PUBLIC "-//ARIB STD-B24:1999//DTD BML Document for IPTV//JA" "http://www.arib.or.jp/B24/DTD/bml_x_x_iptv.dtd">
<?bml bml-version="100.0" ?>
<bml>
<!--
********************************************************************************
     Hokkaido Nature and Wildlife Information
     Hokkaido Television Broadcasting Co., Ltd.
********************************************************************************
-->
<head>
<title>Hokkaido Nature and Wildlife Information</title>
<link href="./common.css" />
<script src="./common.ecm"/>
<script src="./vodData.ecm"/>
<script>
<![CDATA[
var objPhotoList = new clsPhotoList('photo');
var objArticle = new clsArticle();
var objMap = new clsMap();
var objWriter = new clsWriter();

var objBtbNature = new clsBtb('./data/nature.btb', '2,S:1V,S:2V,S:14B,S:1V,S:1V,S:1V,S:1V,I:1B');
var objBtbProfile = new clsBtb('./data/nature_profile.btb', '2,S:1V,S:1V,S:1V,S:1V,I:2B,I:2B');
var objBtbWriter = new clsBtb('./data/nature_writer.btb', '2,S:1V,S:1V,S:2V,S:1V');

var focusObjectId = 'main';
var textMode = 0; //0:article 1:profile
var backimgTimerId = NaN;
var idx = 0;

//******************************************************************************
// 初期表示処理
//******************************************************************************
function ol() {
	browser.lockScreen();
	for (var i = 0; i < 4; i++) gobj('backimg').data = './parts/backimg_' + i.toString() + '.jpg';
	gobj('backimg').data = './parts/backimg_' + idx.toString() + '.jpg';
	objBtbNature.readBtb();
	objBtbProfile.readBtb(0);
	objBtbWriter.readBtb(0);
	objPhotoList.init(objBtbNature);
	objPhotoList.show();
	changePhoto();
	backimgTimerId = browser.setInterval('backimgAutoChange();',10000, 1);
	browser.unlockScreen();
}
//******************************************************************************
// 背景自動差し替え
//******************************************************************************
function backimgAutoChange() {
	browser.lockScreen();
	if (!isNaN(backimgTimerId)) browser.clearTimer(backimgTimerId);
	idx = (idx == 3) ? 0 : idx + 1;
	gobj('backimg').data = './parts/backimg_' + idx.toString() + '.jpg';
	backimgTimerId = browser.setInterval('backimgAutoChange();',10000, 1);
	browser.unlockScreen();
}
//******************************************************************************
// キー操作処理
//******************************************************************************
var keyCode = NaN;
var menuTimerId = NaN;
function onKeyDown() {
	if (!isNaN(menuTimerId)) browser.clearTimer(menuTimerId);
	keyCode = document.currentEvent.keyCode;
	menuTimerId = browser.setInterval("keyActionOnTimer();", 100, 1);
}
function onKyUp() {
	if (!isNaN(menuTimerId)) browser.clearTimer(menuTimerId);
	menuTimerId = NaN;
}
function keyActionOnTimer() {
	browser.lockScreen();
	
	//■...キーコードの取得
	     if (keyCode == 1)  { press1(); }
	else if (keyCode == 2)  { press2(); }
	else if (keyCode == 3)  { press3(); }
	else if (keyCode == 4)  { press4(); }
	else if (keyCode == 18) { press18(); }
	else if (keyCode == 19) { press19(); }
	else if (keyCode == 21) { press21(); }
	else if (keyCode == 22) { press22(); }
	else if (keyCode == 23) { press23(); }
	else if (keyCode == 24) { press24(); }
	else if (keyCode >= 5 && keyCode <= 17) { pressNum(keyCode); }

	browser.unlockScreen();
}
//******************************************************************************
// 上キー押下処理
//******************************************************************************
function press1() {
	var prefocusObjectId = focusObjectId;
	if (focusObjectId == 'main') {
		objArticle.onKeyDown(1);
	}
}
//******************************************************************************
// 下キー押下処理
//******************************************************************************
function press2() {
	var prefocusObjectId = focusObjectId;
	if (focusObjectId == 'main') {
		objArticle.onKeyDown(2);
	}
}
//******************************************************************************
// 左キー押下処理
//******************************************************************************
function press3() {
	var prefocusObjectId = focusObjectId;
	if (focusObjectId == 'main') {
		if (objPhotoList.status != 0) return;
		ps(9);
		gobj('leftBtn').data = './parts/leftBtn_a.png';
		browser.unlockScreen();
		browser.lockScreen();
		objPhotoList.onKeyDown(4);
		textMode = 0;
	}
}
//******************************************************************************
// 右キー押下処理
//******************************************************************************
function press4() {
	var prefocusObjectId = focusObjectId;

	if (focusObjectId == 'main') {
		if (objPhotoList.status != 0) return;
		ps(9);
		gobj('rightBtn').data = './parts/rightBtn_a.png';
		browser.unlockScreen();
		browser.lockScreen();
		objPhotoList.onKeyDown(3);
		textMode = 0;
	}
}
//******************************************************************************
// 決定キー押下処理
//******************************************************************************
function press18() {
	var vodUri = objPhotoList.getUri();
	if (vodUri == '') return;
	browser.Greg[1] = objPhotoList.getBaseName();
	ps(7);
	browser.launchIPTVContent(vodUri, './startup.bml', 0);
}
//******************************************************************************
// 戻るキー押下処理
//******************************************************************************
function press19() {}
//******************************************************************************
// 青キー押下処理
//******************************************************************************
function press21() {
	ps(7);
	if (textMode == 1) {
		objArticle.setData(objPhotoList.getTitle(), objPhotoList.getText());
		objArticle.create();
		textMode = 0;
		gobj('cbtnBase').data = './parts/cbtnBase_0.png';
	} else if (textMode == 0) {
		var pid = objPhotoList.getProfile();
		var wid = objPhotoList.getWriter();
		var name = objBtbWriter.getStr(wid, 1);
		var prof = objBtbWriter.getStr(wid, 2);
		objArticle.setData(name, prof);
		objArticle.create();
		textMode = 1;
		gobj('cbtnBase').data = './parts/cbtnBase_1.png';
	}
}
//******************************************************************************
// 赤キー押下処理
//******************************************************************************
function press22() {}
//******************************************************************************
// 緑キー押下処理
//******************************************************************************
function press23() {}
//******************************************************************************
// 黄キー押下処理
//******************************************************************************
function press24() {}
//******************************************************************************
// 数字キー押下時の制御関数
//******************************************************************************
function pressNum(keyCode) {}
//******************************************************************************
// 写真イメージ制御クラス
//******************************************************************************
function clsPhotoList(id) {
	//■...Property
	this.id = id;
	this.photos = new Array();
	this.pos_lefts = new Array();
	this.max = 7;
	this.status = 0; //0:停止中 1:移動中 2:中サイズ 3:大サイズ
	this.keyCode = 0;
	this.timerId = NaN;
	this.keyList = new Array();
	this.focusIdx = NaN;
	this.center_i = NaN;
	this.data = new Array();

	//■...Method
	this.init = _clsPhotoListInit;
	this.show = _clsPhotoListShow;
	this.hidden = _clsPhotoListHidden;
	this.create = _clsPhotoListCreate;
	this.onKeyDown = _clsPhotoListOnKeyDown;
	this.getTitle = _clsPhotoListGetTitle;
	this.getText = _clsPhotoListGetText;
	this.getProfile = _clsPhotoListGetProfile;
	this.getWriter = _clsPhotoListGetWriter;
	this.getUri = _clsPhotoListGetUri;
	this.getBaseName = _clsPhotoListGetBaseName;
}
function _clsPhotoListInit(objBtb) {
	this.center_i = 3;
	this.data = new Array();
	for (var i = 0; i < objBtb.getMaxRow(); i++) {
		var id = objBtb.getStr(i, 5);
		var ary = objBtb.getArray(i);
		while(1) {
			if (objBtb.getStr(i, 7) == '0') break;
			ary[1] += objBtbgetStr(++i, 1);
		}
		ary[6] =  (vodURL[id] != null && vodURL[id] != '') ? vodURL[id] : '';
		this.data[id] = ary;
	}
	this.keyList = new Array();
	for (var id in this.data) this.keyList[this.keyList.length] = id;

	//■...初期フォーカス処理
	if (browser.Greg[1] != null && browser.Greg[1] != '') {
		while(1) {
			if (this.keyList[this.center_i] == browser.Greg[1]) break;
			var tmpArray = new Array();
			for (var i = 1; i < this.keyList.length; i++) {
				tmpArray[tmpArray.length] = this.keyList[i];
			}
			tmpArray[tmpArray.length] = this.keyList[0];
			this.keyList = new Array();
			for (var i = 0; i < tmpArray.length; i++) {
				this.keyList[this.keyList.length] = tmpArray[i];
			}
		}
	}
	browser.Greg[1] = '';

	for (var i = 0; i < this.max; i++) {
		this.photos[i] = new clsPhoto(this.id + '_S_' + i.toString());
		this.photos[i].init(this.keyList[i], -110 + i * 170, 'S');
	}
}
function _clsPhotoListShow() {
	for (var i = 0; i < this.max; i++) this.photos[i].show();
	vis(this.id + '_L');
	vis('leftBtn');
	vis('rightBtn');
}
function _clsPhotoListHidden() {
	for (var i = 0; i < this.max; i++) this.photos[i].hidden();
	hid(this.id + '_L');
	hid(this.id + 'Shadow');
	hid('leftBtn');
	hid('rightBtn');
}
function _clsPhotoListCreate() {
	browser.lockScreen();
	for (var i = 0; i < this.max; i++) {
		if (this.photos[i].left == 400) {
			this.photos[i].type = 'L';
			this.photos[i].create();
			vis(this.id + 'Shadow');
			this.focusIdx = i;
			if (this.getUri() != '') {
				vis('vodBtn');
			} else {
				hid('vodBtn');
			}
			break;
		}
	}
	browser.unlockScreen();
}
function _clsPhotoListOnKeyDown(keyCode) {
	if (this.status == 1 && keyCode != 0) return;
	if (this.status == 0) this.keyCode = keyCode;
	if (this.keyCode == 3) {//左
		for (var i = 0; i < this.max; i++) {
			if (this.photos[i].left - 85 >= -110) {
				this.photos[i].left = this.photos[i].left - 85;
			} else {
				this.center_i = (this.center_i == this.keyList.length - 1) ? 0 : this.center_i + 1;
				this.photos[i].left = 995;
				if (this.keyList.length - 3 <= this.center_i) {
					this.photos[i].baseName = this.keyList[this.center_i - (this.keyList.length - 3)];
				} else {
					this.photos[i].baseName = this.keyList[this.center_i + 3];
				}
			}
			this.photos[i].type = (this.photos[i].left == 400) ? 'M' : 'S';
			this.photos[i].create()
		}
	} else if (this.keyCode == 4) {//右
		for (var i = 0; i < this.max; i++) {
			if (this.photos[i].left + 85 <= 910) {
				this.photos[i].left = this.photos[i].left + 85;
			} else {
				this.center_i = (this.center_i == 0) ? this.keyList.length - 1 : this.center_i - 1;
				this.photos[i].left = -195;
				if (this.center_i < 3) {
					this.photos[i].baseName = this.keyList[this.keyList.length - (3 - this.center_i)];
				} else {
					this.photos[i].baseName = this.keyList[this.center_i - 3];
				}
			}
			this.photos[i].type = (this.photos[i].left == 400) ? 'M' : 'S';
			this.photos[i].create()
		}
	}

	hid(this.id + 'Shadow');
	if (this.status == 1) this.keyCode = 0;
	this.status = (this.status == 0) ? 1 : 2;
	gobj('leftBtn').data = './parts/leftBtn_n.png';
	gobj('rightBtn').data = './parts/rightBtn_n.png';
	gobj('cbtnBase').data = './parts/cbtnBase_0.png';
	if (this.status == 1) this.timerId = browser.setInterval('movePhoto();', 100, 1);
	if (this.status == 2) this.timerId = browser.setInterval('changePhoto();', 100, 1);
}
function _clsPhotoListGetTitle() { return this.data[this.photos[this.focusIdx].baseName][0]; }
function _clsPhotoListGetText() { return this.data[this.photos[this.focusIdx].baseName][1]; }
function _clsPhotoListGetProfile() { return this.data[this.photos[this.focusIdx].baseName][3]; }
function _clsPhotoListGetWriter() { return this.data[this.photos[this.focusIdx].baseName][4]; }
function _clsPhotoListGetUri() { return this.data[this.photos[this.focusIdx].baseName][6]; }
function _clsPhotoListGetBaseName() { return this.photos[this.focusIdx].baseName; }
//function _clsPhotoListGetUri() { return '1'; }
function movePhoto() {
	browser.lockScreen();
	if (!isNaN(objPhotoList.timerId)) browser.clearTimer(objPhotoList.timerId);
	objPhotoList.timerId = NaN;
	objPhotoList.onKeyDown(0);
	browser.unlockScreen();
}
function changePhoto() {
	browser.lockScreen();
	if (!isNaN(objPhotoList.timerId)) browser.clearTimer(objPhotoList.timerId);
	objPhotoList.timerId = NaN;
	objPhotoList.create();
	objPhotoList.status = 3;
	objArticle.setData(objPhotoList.getTitle(), objPhotoList.getText());
	objArticle.create();
	var pid = objPhotoList.getProfile();
	objMap.setData(objBtbProfile.getStr(pid, 1), objBtbProfile.getStr(pid, 4), objBtbProfile.getStr(pid, 5));
	objMap.create();
	var wid = objPhotoList.getWriter();
	objWriter.setData(objBtbWriter.getStr(wid, 3), objBtbWriter.getStr(wid, 1));
	objWriter.create();
	objPhotoList.status = 0;
	browser.unlockScreen();
}
//******************************************************************************
// 写真イメージクラス
//******************************************************************************
function clsPhoto(id) {
	//■...Property
	this.id = id;
	this.baseName = '';
	this.left = '';
	this.type = ''; //S:small M:middle, L:large

	//■...Method
	this.init = _clsPhotoInit;
	this.show = _clsPhotoShow;
	this.hidden = _clsPhotoHidden;
	this.create = _clsPhotoCreate;
	this.setData = _clsPhotoSetData;
}
function _clsPhotoInit(baseName, left, type) {
	this.setData(baseName, left, type);
	this.create();
}
function _clsPhotoShow() {
	if (this.type == 'S') {
		vis(this.id);
	} else if (this.type == 'M') {
		vis('photoM');
	} else if (this.type == 'L') {
		vis('photoL');
	}
}
function _clsPhotoHidden() {
	if (this.type == 'S') {
		hid(this.id);
	} else if (this.type == 'M') {
		hid('photoM');
	} else if (this.type == 'L') {
		hid('photoL');
	}
}
function _clsPhotoCreate() {
	if (this.type == 'S') {
		if (this.left > 960) {
			gobj(this.id).normalStyle.left = '960px';
		} else {
			gobj(this.id).normalStyle.left = this.left.toString() + 'px';
		}
		gobj(this.id).data = './images/' + this.baseName + this.type + '.jpg';
		vis(this.id);
		hid('vodBtn');
		if (gobj('photo_M').data.indexOf(this.baseName) != -1) hid('photo_M');
		if (gobj('photo_L').data.indexOf(this.baseName) != -1) hid('photo_L');
	} else if (this.type == 'M') {
		gobj('photo_M').data = './images/' + this.baseName + this.type + '.jpg';
		hid(this.id);
		vis('photo_M');
	} else if (this.type == 'L') {
		gobj('photo_L').data = './images/' + this.baseName + this.type + '.jpg';
		hid(this.id);
		vis('photo_L');
	}
}
function _clsPhotoSetData(baseName, left, type) {
	this.baseName = baseName;
	this.left = left;
	this.type = type;
}
//******************************************************************************
// 記事クラス
//******************************************************************************
function clsArticle() {
	//■...Property
	this.title = '';
	this.texts = new Array();
	this.nowPage = NaN;
	this.allPage = NaN;
	this.max = 7; //一頁最大行数
	this.mode = 0;
	this.timerId = NaN;
	
	//■...Method
	this.show = _clsArticleShow;
	this.hidden = _clsArticleHidden;
	this.setData = _clsArticleSetData;
	this.create = _clsArticleCreate;
	this.onKeyDown = _clsArticleOnKeyDown;
}
function _clsArticleShow() {}
function _clsArticleHidden() {}
function _clsArticleSetData(title, text) {
	this.title = title;
	this.texts = new Array();
	this.texts = text.split('\r\n');
	this.nowPage = 0;
	this.allPage = (this.texts.length < this.max) ? 1 : this.texts.length - this.max + 1;
}
function _clsArticleCreate() {
	st('title', this.title);
	var tmpTxt = '';
	for (var i = 0; i < this.max; i++) {
		if (i == this.texts.length) break;
		tmpTxt += this.texts[i + this.nowPage] + '\r\n';
	}
	st('text', tmpTxt);

	if (this.allPage > 1) {
		var top = 355;
		var height = 120;
		var barHeight = 57;
		var tempHeight = height - barHeight;
		var tempTop = tempHeight / (this.allPage - 1);
		gobj('bar').normalStyle.top = (top + (tempTop * this.nowPage)).toString() + 'px';
		vis('upBtn');
		vis('downBtn');
		vis('barBase');
		vis('bar');
	} else {
		hid('upBtn');
		hid('downBtn');
		hid('barBase');
		hid('bar');
	}
}
function _clsArticleOnKeyDown(keyCode) {
	if (keyCode == 1) {//上
		if (this.nowPage == 0) return;
		ps(9);
		gobj('upBtn').data = './parts/scrollUpBtn_a.png';
		this.nowPage--;
		this.create();
		if (!isNaN(this.timerId)) browser.clearTimer(this.timerId);
		browser.setInterval('articleBtnClear();', '500', 1);
	} else if (keyCode == 2) {//下
		if (this.nowPage == this.allPage - 1) return;
		ps(9);
		gobj('downBtn').data = './parts/scrolldownBtn_a.png';
		this.nowPage++;
		this.create();
		if (!isNaN(this.timerId)) browser.clearTimer(this.timerId);
		browser.setInterval('articleBtnClear();', '500', 1);
	}
}
function articleBtnClear() {
	browser.lockScreen();
	gobj('upBtn').data = './parts/scrollUpBtn_n.png';
	gobj('downBtn').data = './parts/scrolldownBtn_n.png';
	objArticle.timerId = NaN;
	browser.unlockScreen();
}
//******************************************************************************
// 地図クラス
//******************************************************************************
function clsMap() {
	//■...Property
	this.location = '';
	this.pos_x = 0;
	this.pos_y = 0;

	//■...Method
	this.show = _clsMapShow;
	this.hidden = _clsMapHidden;
	this.setData = _clsMapSetData;
	this.create = _clsMapCreate;
}
function _clsMapShow() {}
function _clsMapHidden() {}
function _clsMapSetData(location, pos_x, pos_y) {
	this.location = location;
	this.pos_x = pos_x;
	this.pos_y = pos_y;
}
function _clsMapCreate() {
	if (this.location.indexOf('\r\n') != -1) {
		st('location0', this.location);
		st('location1', '');
	} else {
		st('location1', this.location);
		st('location0', '');
	}
	if (this.pos_x != 0 && this.pos_y != 0) {
		gobj('mapPoint').normalStyle.left = this.pos_x.toString() + 'px';
		gobj('mapPoint').normalStyle.top  = this.pos_y.toString() + 'px';
		vis('mapPoint');
	} else {
		hid('mapPoint');
	}
}
//******************************************************************************
// 投稿者クラス
//******************************************************************************
function clsWriter() {
	//■...Property
	this.img = 'htb.jpg';
	this.name = 'HTB';

	//■...Method
	this.show = _clsWriterShow;
	this.hidden = _clsWriterHidden;
	this.setData = _clsWriterSetData;
	this.create = _clsWriterCreate;
}
function _clsWriterShow() {}
function _clsWriterHidden() {}
function _clsWriterSetData(img, name) {
	this.img = './writer/' + img;
	this.name = name;
}
function _clsWriterCreate() {
	gobj('profilePhoto').data = this.img;
	st('profile', this.name);
}
]]>
</script>
<bevent>
	<beitem id="dbp" subscribe="subscribe" onoccur="dbp();" type="DataButtonPressed"/>
</bevent>
</head>
<body id="body" onload="ol();">
	<div class="all">
		<object id="backimg" data="./parts/backimg_0.jpg" type="image/jpeg" />

		<object id="profilePhoto" data="./writer/htb.jpg" type="image/jpeg" />
		<object id="mainBase" data="./parts/mainBase.png" type="image/X-arib-png" />

		<div id="photo" class="all">
			<object class="photoS" id="photo_S_0" data="./images/dummyS.jpg" type="image/jpeg" />
			<object class="photoS" id="photo_S_1" data="./images/dummyS.jpg" type="image/jpeg" />
			<object class="photoS" id="photo_S_2" data="./images/dummyS.jpg" type="image/jpeg" />
			<object class="photoS" id="photo_S_3" data="./images/dummyS.jpg" type="image/jpeg" />
			<object class="photoS" id="photo_S_4" data="./images/dummyS.jpg" type="image/jpeg" />
			<object class="photoS" id="photo_S_5" data="./images/dummyS.jpg" type="image/jpeg" />
			<object class="photoS" id="photo_S_6" data="./images/dummyS.jpg" type="image/jpeg" />
			<object class="photoM" id="photo_M" data="./images/dummyM.jpg" type="image/jpeg" />
			<object class="photoL" id="photo_L" data="./images/dummyL.jpg" type="image/jpeg" />
			<object id="photoShadow" data="./parts/photoShadowL.png" type="image/X-arib-png" />
			<object id="vodBtn" data="./parts/vodBtn.png" type="image/X-arib-png" />
		</div>

		<object id="leftBtn" data="./parts/leftBtn_n.png" type="image/X-arib-png" />
		<object id="rightBtn" data="./parts/rightBtn_n.png" type="image/X-arib-png" />

		<p id="title"><![CDATA[]]></p>
		<p id="text"><![CDATA[]]></p>

		<object id="upBtn" data="./parts/scrollUpBtn_n.png" type="image/X-arib-png" />
		<object id="downBtn" data="./parts/scrollDownBtn_n.png" type="image/X-arib-png" />
		<object id="barBase" data="./parts/scrollBase.png" type="image/X-arib-png" />
		<object id="bar" data="./parts/scrollBar.png" type="image/X-arib-png" />

		<p id="profile"><![CDATA[]]></p>

		<p id="location0"><![CDATA[]]></p>
		<p id="location1"><![CDATA[]]></p>
		<object id="mapPoint" data="./parts/mapPoint.png" type="image/X-arib-png" />

		<object id="cbtnBase" data="./parts/cbtnBase_0.png" type="image/X-arib-png" />

	</div>
	<div id="dummy" style="nav-index:0;" onkeydown="onKeyDown();" />
</body>
</bml>
