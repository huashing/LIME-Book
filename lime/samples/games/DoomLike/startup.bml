<?xml version="1.0" encoding="EUC-JP" ?>
<?bml bml-version="100.0" ?>


<bml>
<head>
<title></title>
<!--
	MAZE joint project by
		Design	: T.Emori	(Toei-CM)
		Program	: K.Tanaka	(Digicas)
-->

<style><![CDATA[
	body {
		background-color-index:0; clut:url(c_0.clt);
	}
	p {
		font-size:20px;
	}
	.view {
		left:-10px; top:-10px; width:512px; height:384px;
		background-color-index:8;
	}
	.scope {
		left:0px; top:0px; width:492px; height:364px;
	}
	object.wall{
		height:384px; visibility:hidden;
	}
	object.enemy {
		left:114px; top:0px; width:284px; height:384px;
		visibility:hidden;
	}
	.map {
		width:420px; height:420px;
	}
	p.map {
		color-index:15;
		background-color-index:30;
	}
	p.hero {
		color-index:3;
		grayscale-color-index:11 47;
		width:20px; height:20px;
	}
	p.alien {
		color-index:3;
		grayscale-color-index:11 47;
		width:20px; height:20px;
	}

]]></style>

<script><![CDATA[
var MAZE_W = 13;
var MAZE_H = 13;
var MAZE;
var HERO;
var CHECK;
var ALIEN = new Array();

var MAP = document.getElementById("map");
var VIEW = document.getElementById("view");


function start(){
	MAP.normalStyle.width = MAZE_W * 20 + "px";
	MAP.normalStyle.height = MAZE_H * 20 + "px";

	MAZE = createMaze(MAZE_W,MAZE_H);

	CHECK = new Player(0,0,0,0,0);
	HERO = new Player(1,1,"H",0,1);
//	ALIEN[0] = new Player(MAZE_W-2,MAZE_H-2,"A",0,0);
	ALIEN[0] = new Player(MAZE_W-2,1,"A",0,0);
	ALIEN[1] = new Player(1,MAZE_H-2,"A",0,0);

	browser.setInterval("tick();",2000,0);

	drawStop(HERO);
	drawMap(MAZE);
}


function tick(){
	moveAlien();
	drawMap(MAZE);
}


function moveAlien(){

	drawAlienMove(HERO);
	for(var i = 0 ; i < ALIEN.length ; i++)
	{
		var alien = ALIEN[i];
		var dx = 0;
		var dy = 0;

		var diffx = HERO.x-alien.x;
		var diffy = HERO.y-alien.y;

		if( diffx < 3 && diffy == 0 ){
			alien.move( (diffx < 0) ? -1 : 1 ,0 );
			break;
		}
		if( diffy < 3 && diffx == 0 ){
			alien.move( 0, (diffy < 0) ? -1 : 1 );
			break;
		}

		var flag = browser.random(3);
		if( flag == 1)
		{
			// approaches Y-axis
			if( diffy < 0 ) dy--;
			else if( diffy > 0 ) dy++;
		}
		else if( flag == 2 )
		{
			// approaches X-Axis
			if( diffx < 0 ) dx--;
			else if( diffx > 0 ) dx++;
		}
		else
		{
			// movement defined by random number
			var d = browser.random(4);
			if( d == 1 ) dx = 1;
			else if( d == 2 ) dx = -1;
			else if( d == 3 ) dy = 1;
			else if( d == 4 ) dy = -1;

		}
		alien.move(dx,dy);
	}
	drawAlienStop(HERO);
}

/**
 * outputs the maze as a string  -- for debugging
 * @param maze : 2-ary array for a maze 
 */
function dumpMaze(maze){
	for(var y = 0 ; y < MAZE_H ; y++){
		var str = "";
		for(var x = 0 ; x < MAZE_W ; x++){
			str += maze[x][y];
		}
	}
}

function drawAlienStop(pos){

	browser.lockScreen();

	CHECK.x = pos.x;
	CHECK.y = pos.y;
	CHECK.dx = pos.dx;
	CHECK.dy = pos.dy;


	var obj = document.getElementById("enemy_f_5_S");
	for(var i = 0 ; i < 10 ; i++){
		obj.normalStyle.visibility = "hidden";
		obj = obj.nextSibling;
	}


	for(var i = 1 ; i < 6 ; i++){
		var ft = CHECK.getTypeF();
		if( ft == "A" ){
			document.getElementById("enemy_f_"+i+"_S").normalStyle.visibility = "visible";
		}
		else if( ft == 1 ){
			break;
		}
		CHECK.moveF();
	}

	browser.unlockScreen();
}


function drawAlienMove(pos){

	browser.lockScreen();

	CHECK.x = pos.x;
	CHECK.y = pos.y;
	CHECK.dx = pos.dx;
	CHECK.dy = pos.dy;
	CHECK.moveB();


	var obj = document.getElementById("enemy_f_5_S");
	for(var i = 0 ; i < 10 ; i++){
		obj.normalStyle.visibility = "hidden";
		obj = obj.nextSibling;
	}


	for(var i = 1 ; i < 6 ; i++){

		var ft = CHECK.getTypeF();
		if( ft == "A" ){
			document.getElementById("enemy_f_"+i+"_T").normalStyle.visibility = "visible";
		}
		else if( ft == 1 ){
			break;
		}
		CHECK.moveF();
	}

	browser.unlockScreen();
}


function drawStop(pos){

	browser.lockScreen();

	VIEW.normalStyle.top = "-10px";
	VIEW.normalStyle.left = "-10px";


	// hide the image when it moves 
	var obj = document.getElementById("l_2_V_T");
	for(var i = 0 ; i < 17 ; i++){
		obj.normalStyle.visibility = "hidden";
		obj = obj.nextSibling;
	}


	// background is always visible
	document.getElementById("f_5_H_S").normalStyle.visibility = "visible";


	CHECK.x = pos.x;
	CHECK.y = pos.y;
	CHECK.dx = pos.dx;
	CHECK.dy = pos.dy;

	for(var step = 0 ; step < 4 ; step++){
		var rt = CHECK.getTypeR();
		var lt = CHECK.getTypeL();
		var ft = CHECK.getTypeF();


		// draws the right wall
		var wall = document.getElementById("r_"+(step+1)+"_V_S");
		var path = document.getElementById("r_"+(step+1)+"_H_S");
		path.normalStyle.visibility = (rt == 1) ? "hidden" : "visible";
		wall.normalStyle.visibility = (rt == 1) ? "visible" : "hidden";


		// draws the left wall
		wall = document.getElementById("l_"+(step+1)+"_V_S");
		path = document.getElementById("l_"+(step+1)+"_H_S");
		wall.normalStyle.visibility = (lt == 1) ? "visible" : "hidden";
		path.normalStyle.visibility = (lt == 1) ? "hidden" : "visible";


		// draws the front wall 
		wall = document.getElementById("f_"+(step+2)+"_V_S");
		wall.normalStyle.visibility = (ft == 1) ? "visible" : "hidden";

		if( ft == 1 ) break;


		CHECK.moveF();
	}

	browser.unlockScreen();
}

function drawMove(pos){
	browser.lockScreen();

	VIEW.normalStyle.top = "-16px";


	// hides the image when is not in motion
	var obj = document.getElementById("l_1_V_S");
	for(var i = 0 ; i < 22 ; i++){
		obj.normalStyle.visibility = "hidden";
		obj = obj.nextSibling;
	}


	CHECK.x = pos.x;
	CHECK.y = pos.y;
	CHECK.dx = pos.dx;
	CHECK.dy = pos.dy;


	for(var step = 1 ; step < 4 ; step++){


		var rt = CHECK.getTypeR();
		var lt = CHECK.getTypeL();
		var ft = CHECK.getTypeF();


		// draws the right wall
		var wall = document.getElementById("r_"+(step+1)+"_V_T");
		var path = document.getElementById("r_"+(step+1)+"_H_T");
		path.normalStyle.visibility = (rt == 1) ? "hidden" : "visible";
		wall.normalStyle.visibility = (rt == 1) ? "visible" : "hidden";


		// draws the left wall
		wall = document.getElementById("l_"+(step+1)+"_V_T");
		path = document.getElementById("l_"+(step+1)+"_H_T");
		wall.normalStyle.visibility = (lt == 1) ? "visible" : "hidden";
		path.normalStyle.visibility = (lt == 1) ? "hidden" : "visible";


		// draws the front wall
		wall = document.getElementById("f_"+(step+2)+"_V_T");
		wall.normalStyle.visibility = (ft == 1) ? "visible" : "hidden";

		if( step == 3 ){
			path = document.getElementById("f_"+(step+2)+"_H_T");
			path.normalStyle.visibility = (ft == 1) ? "hidden" : "visible";
		}


		if( ft == 1 ) break;


		CHECK.moveF();
	}

	browser.unlockScreen();
}


function drawMap(maze){

	var str = "";
	for(var y = 0 ; y < MAZE_H ; y++){
		for(var x = 0 ; x < MAZE_W ; x++){
			str += maze[x][y] == 1 ? "¢£" : "¡¡";
		}
	}
	document.getElementById("map").firstChild.data = str;


	var hero = document.getElementById("hero");
	hero.normalStyle.left = HERO.x * 20 + "px";
	hero.normalStyle.top = HERO.y * 20 + "px";


	for(var i = 0 ; i < ALIEN.length ; i++){
		var alien = ALIEN[i];
		var obj = document.getElementById("alien"+i);
		obj.normalStyle.left = alien.x * 20 + "px";
		obj.normalStyle.top = alien.y * 20 + "px";
	}
}


/**
 * draws graphics when turning right
 * @param pos	position of the hero
 * @param phase	0: 30 degree, 1: 60 degree, 2: graphics is cleared when in rotation
 */
function drawRotateRight( pos, phase ){
	browser.lockScreen();

	// clears the graphics in rotation
	var obj = document.getElementById("r1_1_V_R");
	for(var i = 0 ; i < 10 ; i++){
		obj.normalStyle.visibility = "hidden";
		obj = obj.nextSibling;
	}

	// clears the enemy
	var obj = document.getElementById("enemy_f_5_S");
	for(var i = 0 ; i < 10 ; i++){
		obj.normalStyle.visibility = "hidden";
		obj = obj.nextSibling;
	}

	if( phase > 1 ) return;


	CHECK.x = pos.x;
	CHECK.y = pos.y;
	CHECK.dx = pos.dx;
	CHECK.dy = pos.dy;

	var w0 = CHECK.getTypeF() == 1;	// a wall in front?
	var w1 = CHECK.getTypeR() == 1;	// a wall on the right?
	CHECK.moveF();
	var w2 = CHECK.getTypeR() == 1;	// a wall in right 45 degrees front?


	var f = (phase == 0) ? "1" : "2"; // index of file



	// front
	var front = document.getElementById("r"+f+"f_2_V_R");
	front.normalStyle.visibility = w0 ? "visible" : "hidden";


	// right side
	var wall = document.getElementById("r"+f+"_1_V_R");
	var path = document.getElementById("r"+f+"_1_H_R");
	wall.normalStyle.visibility = w1 ? "visible" : "hidden";
	path.normalStyle.visibility = w1 ? "hidden" : "visible";


	// right 45 degrees front
	wall = document.getElementById("r"+f+"_2_V_R");
	path = document.getElementById("r"+f+"_2_H_R");
	wall.normalStyle.visibility = w2 ? "visible" : "hidden";
	path.normalStyle.visibility = w2 ? "hidden" : "visible";

	browser.unlockScreen();
}


/**
 * draws graphics when turning left
 * @param pos	the position of the hero
 * @param phase	0: 30 degrees, 1: 60 degrees 2: graphics is cleared when in rotation
 */
function drawRotateLeft( pos, phase ){
	browser.lockScreen();

	// clears graphics in rotation
	var obj = document.getElementById("l1_1_V_R");
	for(var i = 0 ; i < 10 ; i++){
		obj.normalStyle.visibility = "hidden";
		obj = obj.nextSibling;
	}

	// clears the enemy
	var obj = document.getElementById("enemy_f_5_S");
	for(var i = 0 ; i < 10 ; i++){
		obj.normalStyle.visibility = "hidden";
		obj = obj.nextSibling;
	}

	if( phase > 1 ) return;


	CHECK.x = pos.x;
	CHECK.y = pos.y;
	CHECK.dx = pos.dx;
	CHECK.dy = pos.dy;

	var w0 = CHECK.getTypeF() == 1;	// wall in front?
	var w1 = CHECK.getTypeL() == 1;	// wall on the left side?
	CHECK.moveF();
	var w2 = CHECK.getTypeL() == 1;	// wall in 45 deg. left front?


	var f = (phase == 0) ? "1" : "2"; // index of file


	// front
	var front = document.getElementById("l"+f+"f_2_V_R");
	front.normalStyle.visibility = w0 ? "visible" : "hidden";


	// right side
	var wall = document.getElementById("l"+f+"_1_V_R");
	var path = document.getElementById("l"+f+"_1_H_R");
	wall.normalStyle.visibility = w1 ? "visible" : "hidden";
	path.normalStyle.visibility = w1 ? "hidden" : "visible";


	// right 45 degrees front
	wall = document.getElementById("l"+f+"_2_V_R");
	path = document.getElementById("l"+f+"_2_H_R");
	wall.normalStyle.visibility = w2 ? "visible" : "hidden";
	path.normalStyle.visibility = w2 ? "hidden" : "visible";

	browser.unlockScreen();
}



function Player(x,y,t,dx,dy){
	this.x = x;
	this.y = y;
	this.t = t;
	this.dx = dx;
	this.dy = dy;
	this.move = PosMove;
	this.moveF = PosMoveF;
	this.moveB = PosMoveB;
	this.turnR = PosTurnR;
	this.turnL = PosTurnL;
	this.getTypeR = PosTypeR;
	this.getTypeL = PosTypeL;
	this.getTypeF = PosTypeF;
	MAZE[x][y] = t;
}

function PosTypeF(){
	var nx = this.x + this.dx;
	var ny = this.y + this.dy;
	return MAZE[nx][ny];
}

function PosTypeR(){
	var nx = this.dy * -1 + this.x;
	var ny = this.dx + this.y;
	return MAZE[nx][ny];
}

function PosTypeL(){
	var nx = this.dy + this.x;
	var ny = this.dx * -1 + this.y;
	return MAZE[nx][ny];
}

function PosMove(dx,dy){
	var nx = this.x + dx;
	var ny = this.y + dy;
	if(MAZE[nx][ny] != 1){
		if(this.t != 0) MAZE[this.x][this.y] = 0;
		this.x = nx;
		this.y = ny;
		if(this.t != 0) MAZE[this.x][this.y] = this.t;
	}
}

function PosMoveF(){
	var nx = this.x + this.dx;
	var ny = this.y + this.dy;
	if(MAZE[nx][ny] != 1){
		if(this.t != 0) MAZE[this.x][this.y] = 0;
		this.x = nx;
		this.y = ny;
		if(this.t != 0) MAZE[this.x][this.y] = this.t;
	}
}

function PosMoveB(){
	var nx = this.x - this.dx;
	var ny = this.y - this.dy;
	if(MAZE[nx][ny] != 1){
		if(this.t != 0) MAZE[this.x][this.y] = 0;
		this.x = nx;
		this.y = ny;
		if(this.t != 0) MAZE[this.x][this.y] = this.t;
	}
}

function PosTurnR(){
	var nx = this.dy * -1;
	var ny = this.dx;
	this.dx = nx;
	this.dy = ny;
}

function PosTurnL(){
	var nx = this.dy;
	var ny = this.dx * -1;
	this.dx = nx;
	this.dy = ny;
}


function showMap(flag){
	var mb = document.getElementById("mapbase");
	mb.normalStyle.visibility = flag ? "visible" : "hidden";
}


function keyup(){
	showMap(false);
}

function keydown(){
	var code = document.currentEvent.keyCode;

	if( code == 1 )		// forward
	{
		HERO.moveF();
		drawMove(HERO);
		drawAlienMove(HERO);
		browser.sleep(100);
	}
	else if( code == 2 )	// backward
	{
		drawMove(HERO);
		drawAlienMove(HERO);
		browser.sleep(100);
		HERO.moveB();
	}
	else if( code == 3 )	// left
	{
		VIEW.normalStyle.left = "0px";

		drawRotateLeft( HERO, 0 );
		browser.sleep(100);
		drawRotateLeft( HERO, 2 );

		HERO.turnL();
	}
	else if( code == 4 )	// right
	{
		VIEW.normalStyle.left = "-20px";

		drawRotateRight( HERO, 0 );
		browser.sleep(100);
		drawRotateRight( HERO, 2 );

		HERO.turnR();
	}
	else if( code == 21 ){
		showMap(true);
		return;
	}


	document.getElementById("walk_2").streamStatus = "stop";
	document.getElementById("walk_1").streamStatus = "play";

	drawStop(HERO);

	document.getElementById("walk_1").streamStatus = "stop";
	document.getElementById("walk_2").streamStatus = "play";

	drawAlienStop(HERO);

	drawMap(MAZE);
}


/**
 * returns 2-ary array for a maze
 * @param w width (odd number)
 * @param h height (odd number)
 */
function createMaze(w, h){

	// initialization of the array
	var maze = new Array();
	for(var x = 0 ; x < w ; x++){
		maze[x] = new Array();
		for(var y = 0 ; y < h ; y++){
			maze[x][y] = 0;
		}
	}


	// walls on the 4 directions
	for(var x = 0 ; x < w ; x++){
		maze[x][0] = maze[x][h-1] = 1;
	}
	for(var y = 0 ; y < h ; y++){
		maze[0][y] = maze[w-1][y] = 1;
	}


	// maze generation algorithm
	for(var x = 2 ; x < w-2 ; x += 2){
		for(var y = 2 ; y < h-2 ; y += 2){
			maze[x][y] = 1;

			// left-most row 4 directions are allowed; other rows can have only up,down,rightward are allowed
			var dir = browser.random((x == 2) ? 4 : 3);

			var px = x;
			var py = y;
			if( dir == 0 ) { py--; }
			else if( dir == 1 ) { py++; }
			else if( dir == 2 ) { px++; }
			else if( dir == 3 ) { px--; }

			maze[px][py] = 1;
		}
	}

	return maze;
}

]]></script>
</head>


<body onload="start();">
<div>
<object id="walk_1" type="audio/X-arib-aiff" data="walk_1.aif" streamstatus="stop"/>
<object id="walk_2" type="audio/X-arib-aiff" data="walk_2.aif" streamstatus="stop"/>
</div>

<div class="scope" style="left:100px;top:60px;nav-index:0;"
	onkeydown="keydown();" onkeyup="keyup();">
<div id="view" class="view">
<!-- ***** stationary ***** -->
	<!--left wall-->
	<object id="l_1_V_S" data="l_1_V_S.png" class="wall"
		type="image/X-arib-png" style="left:0px; width:65px;"/>
	<object id="l_1_H_S" data="l_1_H_S.png" class="wall"
		type="image/X-arib-png" style="left:0px; width:65px;"/>

	<object id="l_2_V_S" data="l_2_V_S.png" class="wall"
		type="image/X-arib-png" style="left:65px; width:85px;"/>
	<object id="l_2_H_S" data="l_2_H_S.png" class="wall"
		type="image/X-arib-png" style="left:65px; width:85px;"/>

	<object id="l_3_V_S" data="l_3_V_S.png" class="wall"
		type="image/X-arib-png" style="left:150px; width:33px;"/>
	<object id="l_3_H_S" data="l_3_H_S.png" class="wall"
		type="image/X-arib-png" style="left:150px; width:33px;"/>

	<object id="l_4_V_S" data="l_4_V_S.png" class="wall"
		type="image/X-arib-png" style="left:183px; width:17px;"/>
	<object id="l_4_H_S" data="l_4_H_S.png" class="wall"
		type="image/X-arib-png" style="left:183px; width:17px;"/>

	<!--right wall-->
	<object id="r_1_V_S" data="r_1_V_S.png" class="wall"
		type="image/X-arib-png" style="left:448px; width:64px;"/>
	<object id="r_1_H_S" data="r_1_H_S.png" class="wall"
		type="image/X-arib-png" style="left:448px; width:64px;"/>

	<object id="r_2_V_S" data="r_2_V_S.png" class="wall"
		type="image/X-arib-png" style="left:363px; width:85px;"/>
	<object id="r_2_H_S" data="r_2_H_S.png" class="wall"
		type="image/X-arib-png" style="left:363px; width:85px;"/>

	<object id="r_3_V_S" data="r_3_V_S.png" class="wall"
		type="image/X-arib-png" style="left:330px; width:33px;"/>
	<object id="r_3_H_S" data="r_3_H_S.png" class="wall"
		type="image/X-arib-png" style="left:330px; width:33px;"/>

	<object id="r_4_V_S" data="r_4_V_S.png" class="wall"
		type="image/X-arib-png" style="left:313px; width:17px;"/>
	<object id="r_4_H_S" data="r_4_H_S.png" class="wall"
		type="image/X-arib-png" style="left:313px; width:17px;"/>

	<!-- front wall -->
	<object id="f_5_V_S" data="f_5_V_S.png" class="wall"
		type="image/X-arib-png" style="left:200px; width:113px;"/>
	<object id="f_5_H_S" data="f_5_H_S.png" class="wall"
		type="image/X-arib-png" style="left:200px; width:113px;"/>
	<object id="f_4_V_S" data="f_4_V_S.png" class="wall"
		type="image/X-arib-png" style="left:183px; width:147px;"/>
	<object id="f_3_V_S" data="f_3_V_S.png" class="wall"
		type="image/X-arib-png" style="left:150px; width:213px;"/>
	<object id="f_2_V_S" data="f_2_V_S.png" class="wall"
		type="image/X-arib-png" style="left:65px; width:383px;"/>


<!-- ***** in motion ***** -->
	<!-- left wall -->
	<object id="l_2_V_T" data="l_2_V_T.png" class="wall"
		type="image/X-arib-png" style="left:0px; width:120px;"/>
	<object id="l_2_H_T" data="l_2_H_T.png" class="wall"
		type="image/X-arib-png" style="left:0px; width:120px;"/>

	<object id="l_3_V_T" data="l_3_V_T.png" class="wall"
		type="image/X-arib-png" style="left:120px; width:50px;"/>
	<object id="l_3_H_T" data="l_3_H_T.png" class="wall"
		type="image/X-arib-png" style="left:120px; width:50px;"/>

	<object id="l_4_V_T" data="l_4_V_T.png" class="wall"
		type="image/X-arib-png" style="left:170px; width:23px;"/>
	<object id="l_4_H_T" data="l_4_H_T.png" class="wall"
		type="image/X-arib-png" style="left:170px; width:23px;"/>

	<!-- right wall -->
	<object id="r_2_V_T" data="r_2_V_T.png" class="wall"
		type="image/X-arib-png" style="left:393px; width:119px;"/>
	<object id="r_2_H_T" data="r_2_H_T.png" class="wall"
		type="image/X-arib-png" style="left:393px; width:119px;"/>

	<object id="r_3_V_T" data="r_3_V_T.png" class="wall"
		type="image/X-arib-png" style="left:343px; width:50px;"/>
	<object id="r_3_H_T" data="r_3_H_T.png" class="wall"
		type="image/X-arib-png" style="left:343px; width:50px;"/>

	<object id="r_4_V_T" data="r_4_V_T.png" class="wall"
		type="image/X-arib-png" style="left:320px; width:23px;"/>
	<object id="r_4_H_T" data="r_4_H_T.png" class="wall"
		type="image/X-arib-png" style="left:320px; width:23px;"/>

	<!-- front wall -->
	<object id="f_3_V_T" data="f_3_V_T.png" class="wall"
		type="image/X-arib-png" style="left:120px; width:273px;"/>

	<object id="f_4_V_T" data="f_4_V_T.png" class="wall"
		type="image/X-arib-png" style="left:170px; width:173px;"/>

	<object id="f_5_V_T" data="f_5_V_T.png" class="wall"
		type="image/X-arib-png" style="left:193px; width:127px;"/>
	<object id="f_5_H_T" data="f_5_H_T.png" class="wall"
		type="image/X-arib-png" style="left:193px; width:127px;"/>


<!-- ****** enemy ****** -->
	<object id="enemy_f_5_S" data="enemy_f_5_S.png" class="enemy"
		type="image/X-arib-png"/>
	<object id="enemy_f_5_T" data="enemy_f_5_T.png" class="enemy"
		type="image/X-arib-png"/>
	<object id="enemy_f_4_S" data="enemy_f_4_S.png" class="enemy"
		type="image/X-arib-png"/>
	<object id="enemy_f_4_T" data="enemy_f_4_T.png" class="enemy"
		type="image/X-arib-png"/>
	<object id="enemy_f_3_S" data="enemy_f_3_S.png" class="enemy"
		type="image/X-arib-png"/>
	<object id="enemy_f_3_T" data="enemy_f_3_T.png" class="enemy"
		type="image/X-arib-png"/>
	<object id="enemy_f_2_S" data="enemy_f_2_S.png" class="enemy"
		type="image/X-arib-png"/>
	<object id="enemy_f_2_T" data="enemy_f_2_T.png" class="enemy"
		type="image/X-arib-png"/>
	<object id="enemy_f_1_S" data="enemy_f_1_S.png" class="enemy"
		type="image/X-arib-png"/>
	<object id="enemy_f_1_T" data="enemy_f_1_T.png" class="enemy"
		type="image/X-arib-png"/>



<!-- ****** in rotation ****** -->
	<!-- left turn 1 -->
	<object id="l1_1_V_R" data="l_1_V_R.png" class="wall"
		type="image/X-arib-png" style="left:0px; width:374px;"/>
	<object id="l1_1_H_R" data="l_1_H_R.png" class="wall"
		type="image/X-arib-png" style="left:0px; width:374px;"/>
	<object id="l1_2_H_R" data="l_2_H_R.png" class="wall"
		type="image/X-arib-png" style="left:374px; width:138px;"/>
	<object id="l1_2_V_R" data="l_2_V_R.png" class="wall"
		type="image/X-arib-png" style="left:374px; width:138px;"/>
	<object id="l1f_2_V_R" data="fl_2_V_R.png" class="wall"
		type="image/X-arib-png" style="left:374px; width:138px;"/>

	<!-- left turn 2 -->
	<object id="l2_1_V_R" data="r_1_V_R.png" class="wall"
		type="image/X-arib-png" style="left:138px; width:374px;"/>
	<object id="l2_1_H_R" data="r_1_H_R.png" class="wall"
		type="image/X-arib-png" style="left:138px; width:374px;"/>
	<object id="l2_2_H_R" data="r_2_H_R.png" class="wall"
		type="image/X-arib-png" style="left:0px; width:138px;"/>
	<object id="l2_2_V_R" data="r_2_V_R.png" class="wall"
		type="image/X-arib-png" style="left:0px; width:138px;"/>
	<object id="l2f_2_V_R" data="fr_2_V_R.png" class="wall"
		type="image/X-arib-png" style="left:0px; width:138px;"/>

	<!-- right turn 1 -->
	<object id="r1_1_V_R" data="r_1_V_R.png" class="wall"
		type="image/X-arib-png" style="left:138px; width:374px;"/>
	<object id="r1_1_H_R" data="r_1_H_R.png" class="wall"
		type="image/X-arib-png" style="left:138px; width:374px;"/>
	<object id="r1_2_H_R" data="r_2_H_R.png" class="wall"
		type="image/X-arib-png" style="left:0px; width:138px;"/>
	<object id="r1_2_V_R" data="r_2_V_R.png" class="wall"
		type="image/X-arib-png" style="left:0px; width:138px;"/>
	<object id="r1f_2_V_R" data="fr_2_V_R.png" class="wall"
		type="image/X-arib-png" style="left:0px; width:138px;"/>

	<!-- right turn 2 -->
	<object id="r2_1_V_R" data="l_1_V_R.png" class="wall"
		type="image/X-arib-png" style="left:0px; width:374px;"/>
	<object id="r2_1_H_R" data="l_1_H_R.png" class="wall"
		type="image/X-arib-png" style="left:0px; width:374px;"/>
	<object id="r2_2_H_R" data="l_2_H_R.png" class="wall"
		type="image/X-arib-png" style="left:374px; width:138px;"/>
	<object id="r2_2_V_R" data="l_2_V_R.png" class="wall"
		type="image/X-arib-png" style="left:374px; width:138px;"/>
	<object id="r2f_2_V_R" data="fl_2_V_R.png" class="wall"
		type="image/X-arib-png" style="left:374px; width:138px;"/>
</div>
</div>

<div id="mapbase" class="map" style="left:650px; top:50px; visibility: hidden;">
	<p id="map" class="map"><![CDATA[¡¡]]></p>
	<p id="hero" class="hero">¡ú</p>
	<p id="alien0" class="alien">¢¨</p>
	<p id="alien1" class="alien">¢¨</p>
</div>
<div style="left:450px;top:380px;width:168px;height:164px;">
<object type="image/X-arib-png" data="doom-gun.png" style="left:0;top:0;width:168px;height:164px;"/>
</div>
</body>
</bml>

